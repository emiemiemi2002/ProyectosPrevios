package Frames;

//Imports
import javax.swing.ImageIcon;
import java.awt.event.*;
import Clases.*;
import javax.swing.JOptionPane;
import java.sql.*;
import java.sql.Date;

/**
 *
 * @author Propietario
 */
public class VentanaINSERT extends javax.swing.JFrame implements ActionListener{

    //Vars/Objs
    Conexion_BD_CAASA obclasecon=new Conexion_BD_CAASA();
    Connection vcon=obclasecon.conectar();
    
    /**
     * Creates new form VentanaINSERT
     */
    public VentanaINSERT() {
        initComponents();
        //Icono de la ventana
        ImageIcon icon=new ImageIcon("C:\\Users\\Propietario\\Desktop\\Trabajos - Semestre 8\\Gestión de Proyectos de Software\\NBP\\Sistema de operaciones CRUD CAASA\\src\\Imagenes\\lcaasa.jpg");
        this.setIconImage(icon.getImage());  
        
        //Elementos combo "cbo_TablasInsertar"
        cbo_TablasInsertar.addItem("Cliente");
        cbo_TablasInsertar.addItem("Domicilio");
        cbo_TablasInsertar.addItem("Asesor");
        cbo_TablasInsertar.addItem("Automovil");
        cbo_TablasInsertar.addItem("Servicio");
        //cbo_TablasInsertar.addItem("Modelo(Auto)");
        cbo_TablasInsertar.setSelectedIndex(-1);
        
        //Desactivar paneles
        Pan1.setEnabled(false);
        Pan2.setEnabled(false);
        Pan3.setEnabled(false);
        Pan4.setEnabled(false);
        Pan5.setEnabled(false);
        //Desactivar campos de texto de paneles
        txtf_AccionServ.setEnabled(false);
        txtf_AmAsesor.setEnabled(false);
        txtf_AmClient.setEnabled(false);
        txtf_ApAsesor.setEnabled(false);
        txtf_ApClient.setEnabled(false);
        txtf_CP.setEnabled(false);
        txtf_CURPClient.setEnabled(false);
        txtf_Calle.setEnabled(false);
        txtf_CelAsesor.setEnabled(false);
        txtf_CelClient.setEnabled(false);
        txtf_CiudMun.setEnabled(false);
        txtf_ColAuto.setEnabled(false);
        txtf_Colonia.setEnabled(false);
        txtf_CompServ.setEnabled(false);
        txtf_DispAuto.setEnabled(false);
        txtf_DispServ.setEnabled(false);
        txtf_EmailAsesor.setEnabled(false);
        txtf_EstadAuto.setEnabled(false);
        txtf_FechnacClient.setEnabled(false);
        txtf_IDAsesor.setEnabled(false);
        txtf_IdClient.setEnabled(false);
        txtf_IDDomic.setEnabled(false);
        txtf_IDPerServ.setEnabled(false);
        txtf_IDServ.setEnabled(false);
        txtf_IDTipServ.setEnabled(false);
        txtf_IdDomic.setEnabled(false);
        txtf_ModelAuto.setEnabled(false);
        txtf_NSAuto.setEnabled(false);
        txtf_Next.setEnabled(false);
        txtf_Nint.setEnabled(false);
        txtf_NomAsesor.setEnabled(false);
        txtf_NomClient.setEnabled(false);
        txtf_PrecioAuto.setEnabled(false);
        txtf_PrecioServ.setEnabled(false);
        txtf_RFClient.setEnabled(false);
        txtf_TelAsesor.setEnabled(false);
        txtf_TelClient.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Pan1 = new javax.swing.JPanel();
        txtf_IdDomic = new javax.swing.JTextField();
        txtf_NomClient = new javax.swing.JTextField();
        txtf_ApClient = new javax.swing.JTextField();
        txtf_AmClient = new javax.swing.JTextField();
        txtf_TelClient = new javax.swing.JTextField();
        txtf_CelClient = new javax.swing.JTextField();
        txtf_RFClient = new javax.swing.JTextField();
        txtf_CURPClient = new javax.swing.JTextField();
        txtf_FechnacClient = new javax.swing.JTextField();
        lbl_IdDomic = new javax.swing.JLabel();
        lbl_NomClient = new javax.swing.JLabel();
        lbl_ApClient = new javax.swing.JLabel();
        lbl_AmClient = new javax.swing.JLabel();
        lbl_TelClient = new javax.swing.JLabel();
        lbl_CelClient = new javax.swing.JLabel();
        lbl_RFClient = new javax.swing.JLabel();
        lbl_CURPClient = new javax.swing.JLabel();
        lbl_FechanacClient = new javax.swing.JLabel();
        lbl_IdClient = new javax.swing.JLabel();
        txtf_IdClient = new javax.swing.JTextField();
        Pan2 = new javax.swing.JPanel();
        lbl_IDDomic = new javax.swing.JLabel();
        lbl_CiudMun = new javax.swing.JLabel();
        lbl_CP = new javax.swing.JLabel();
        lbl_Colonia = new javax.swing.JLabel();
        lbl_Calle = new javax.swing.JLabel();
        lbl_Next = new javax.swing.JLabel();
        lbl_Nint = new javax.swing.JLabel();
        txtf_IDDomic = new javax.swing.JTextField();
        txtf_CiudMun = new javax.swing.JTextField();
        txtf_CP = new javax.swing.JTextField();
        txtf_Colonia = new javax.swing.JTextField();
        txtf_Calle = new javax.swing.JTextField();
        txtf_Next = new javax.swing.JTextField();
        txtf_Nint = new javax.swing.JTextField();
        Pan3 = new javax.swing.JPanel();
        lbl_IDAsesor = new javax.swing.JLabel();
        lbl_NomAsesor = new javax.swing.JLabel();
        lbl_ApAsesor = new javax.swing.JLabel();
        lbl_AmAsesor = new javax.swing.JLabel();
        lbl_TelAsesor = new javax.swing.JLabel();
        lbl_CelAsesor = new javax.swing.JLabel();
        lbl_EmailAsesor = new javax.swing.JLabel();
        txtf_EmailAsesor = new javax.swing.JTextField();
        txtf_IDAsesor = new javax.swing.JTextField();
        txtf_NomAsesor = new javax.swing.JTextField();
        txtf_ApAsesor = new javax.swing.JTextField();
        txtf_AmAsesor = new javax.swing.JTextField();
        txtf_TelAsesor = new javax.swing.JTextField();
        txtf_CelAsesor = new javax.swing.JTextField();
        Pan4 = new javax.swing.JPanel();
        lbl_DispAuto = new javax.swing.JLabel();
        lbl_NSAuto = new javax.swing.JLabel();
        lbl_ModelAuto = new javax.swing.JLabel();
        lbl_ColAuto = new javax.swing.JLabel();
        lbl_PrecioAuto = new javax.swing.JLabel();
        lbl_EstadAuto = new javax.swing.JLabel();
        txtf_DispAuto = new javax.swing.JTextField();
        txtf_NSAuto = new javax.swing.JTextField();
        txtf_ModelAuto = new javax.swing.JTextField();
        txtf_ColAuto = new javax.swing.JTextField();
        txtf_PrecioAuto = new javax.swing.JTextField();
        txtf_EstadAuto = new javax.swing.JTextField();
        Pan5 = new javax.swing.JPanel();
        lbl_IDPerServ = new javax.swing.JLabel();
        lbl_IDServ = new javax.swing.JLabel();
        lbl_AccionServ = new javax.swing.JLabel();
        lbl_CompServ = new javax.swing.JLabel();
        lbl_PrecioServ = new javax.swing.JLabel();
        lbl_DispServ = new javax.swing.JLabel();
        lbl_IDTipServ = new javax.swing.JLabel();
        txtf_IDPerServ = new javax.swing.JTextField();
        txtf_IDServ = new javax.swing.JTextField();
        txtf_AccionServ = new javax.swing.JTextField();
        txtf_CompServ = new javax.swing.JTextField();
        txtf_PrecioServ = new javax.swing.JTextField();
        txtf_DispServ = new javax.swing.JTextField();
        txtf_IDTipServ = new javax.swing.JTextField();
        btn_INSERTAR = new javax.swing.JButton();
        cbo_TablasInsertar = new javax.swing.JComboBox<>();
        lbl_SeleccTab = new javax.swing.JLabel();
        lbl_fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Insertar registro");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Pan1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cliente"));
        Pan1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        Pan1.add(txtf_IdDomic, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 150, -1));
        Pan1.add(txtf_NomClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 180, -1));
        Pan1.add(txtf_ApClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 140, -1));
        Pan1.add(txtf_AmClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 140, -1));
        Pan1.add(txtf_TelClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 160, -1));
        Pan1.add(txtf_CelClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, 140, -1));
        Pan1.add(txtf_RFClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, 220, -1));
        Pan1.add(txtf_CURPClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 210, -1));
        Pan1.add(txtf_FechnacClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, 110, -1));

        lbl_IdDomic.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        lbl_IdDomic.setText("ID de domicilio:");
        lbl_IdDomic.setToolTipText("Tamaño: 11 dígitos");
        Pan1.add(lbl_IdDomic, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 110, -1));

        lbl_NomClient.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        lbl_NomClient.setText("Nombre(s):");
        Pan1.add(lbl_NomClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        lbl_ApClient.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        lbl_ApClient.setText("Apellido paterno:");
        Pan1.add(lbl_ApClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        lbl_AmClient.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        lbl_AmClient.setText("Apellido materno:");
        Pan1.add(lbl_AmClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        lbl_TelClient.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        lbl_TelClient.setText("Teléfono (fijo):");
        lbl_TelClient.setToolTipText("Tamaño: 7 dígitos");
        Pan1.add(lbl_TelClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        lbl_CelClient.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        lbl_CelClient.setText("Teléfono (móvil):");
        lbl_CelClient.setToolTipText("Tamaño: 12 dígitos");
        Pan1.add(lbl_CelClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

        lbl_RFClient.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        lbl_RFClient.setText("RFC:");
        lbl_RFClient.setToolTipText("Registro Federal de Contribuyentes.");
        Pan1.add(lbl_RFClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        lbl_CURPClient.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        lbl_CURPClient.setText("CURP:");
        lbl_CURPClient.setToolTipText("Clave Única de Registro de Población.");
        Pan1.add(lbl_CURPClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        lbl_FechanacClient.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        lbl_FechanacClient.setText("Fecha de nacimiento:");
        lbl_FechanacClient.setToolTipText("Formato: AAAA-MM-DD");
        Pan1.add(lbl_FechanacClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        lbl_IdClient.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        lbl_IdClient.setText("ID de cliente:");
        lbl_IdClient.setToolTipText("Tamaño: 11 dígitos");
        Pan1.add(lbl_IdClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 90, -1));

        txtf_IdClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtf_IdClientActionPerformed(evt);
            }
        });
        Pan1.add(txtf_IdClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 170, -1));

        jPanel1.add(Pan1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 310, 330));

        Pan2.setBorder(javax.swing.BorderFactory.createTitledBorder("Domicilio"));
        Pan2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_IDDomic.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_IDDomic.setText("ID de domicilio:");
        lbl_IDDomic.setToolTipText("ID de un cliente existente en la base de datos(11).");
        Pan2.add(lbl_IDDomic, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        lbl_CiudMun.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_CiudMun.setText("Ciudad/Municipio:");
        Pan2.add(lbl_CiudMun, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        lbl_CP.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_CP.setText("Código Postal:");
        lbl_CP.setToolTipText("Tamaño: 5 dígitos");
        Pan2.add(lbl_CP, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        lbl_Colonia.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_Colonia.setText("Colonia:");
        Pan2.add(lbl_Colonia, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        lbl_Calle.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_Calle.setText("Calle:");
        Pan2.add(lbl_Calle, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        lbl_Next.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_Next.setText("Número exterior:");
        lbl_Next.setToolTipText("Tamaño máximo: 3 dígitos");
        Pan2.add(lbl_Next, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        lbl_Nint.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_Nint.setText("Número interior:");
        lbl_Nint.setToolTipText("Tamaño: 2 dígitos");
        Pan2.add(lbl_Nint, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, -1, -1));

        txtf_IDDomic.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan2.add(txtf_IDDomic, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 190, 20));

        txtf_CiudMun.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan2.add(txtf_CiudMun, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 180, 20));

        txtf_CP.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        txtf_CP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtf_CPActionPerformed(evt);
            }
        });
        Pan2.add(txtf_CP, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 200, 20));

        txtf_Colonia.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan2.add(txtf_Colonia, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 240, 20));

        txtf_Calle.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan2.add(txtf_Calle, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 250, 20));

        txtf_Next.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        txtf_Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtf_NextActionPerformed(evt);
            }
        });
        Pan2.add(txtf_Next, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 40, 20));

        txtf_Nint.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan2.add(txtf_Nint, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, 40, 20));

        jPanel1.add(Pan2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 220, 340, 180));

        Pan3.setBorder(javax.swing.BorderFactory.createTitledBorder("Asesor"));
        Pan3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_IDAsesor.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_IDAsesor.setText("ID de asesor:");
        lbl_IDAsesor.setToolTipText("Tamaño: 8 dígitos");
        Pan3.add(lbl_IDAsesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        lbl_NomAsesor.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_NomAsesor.setText("Nombre(s):");
        Pan3.add(lbl_NomAsesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        lbl_ApAsesor.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_ApAsesor.setText("Apellido paterno:");
        Pan3.add(lbl_ApAsesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        lbl_AmAsesor.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_AmAsesor.setText("Apellido materno:");
        Pan3.add(lbl_AmAsesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        lbl_TelAsesor.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_TelAsesor.setText("Teléfono(fijo):");
        lbl_TelAsesor.setToolTipText("Tamaño: 7 dígitos");
        Pan3.add(lbl_TelAsesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        lbl_CelAsesor.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_CelAsesor.setText("Teléfono(móvil):");
        lbl_CelAsesor.setToolTipText("Tamaño: 12 dígitos");
        Pan3.add(lbl_CelAsesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        lbl_EmailAsesor.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_EmailAsesor.setText("Correo electrónico:");
        Pan3.add(lbl_EmailAsesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        txtf_EmailAsesor.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan3.add(txtf_EmailAsesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 170, 20));

        txtf_IDAsesor.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan3.add(txtf_IDAsesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 210, 20));

        txtf_NomAsesor.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan3.add(txtf_NomAsesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 220, 20));

        txtf_ApAsesor.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan3.add(txtf_ApAsesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 180, 20));

        txtf_AmAsesor.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan3.add(txtf_AmAsesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 180, 20));

        txtf_TelAsesor.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan3.add(txtf_TelAsesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 200, 20));

        txtf_CelAsesor.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan3.add(txtf_CelAsesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 190, 20));

        jPanel1.add(Pan3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 410, 340, 180));

        Pan4.setBorder(javax.swing.BorderFactory.createTitledBorder("Automóvil"));
        Pan4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_DispAuto.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_DispAuto.setText("Disponibilidad:");
        lbl_DispAuto.setToolTipText("(Disponible, No disponible,...).");
        Pan4.add(lbl_DispAuto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        lbl_NSAuto.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_NSAuto.setText("Número de serie:");
        lbl_NSAuto.setToolTipText("Tamaño: 16 dígitos");
        Pan4.add(lbl_NSAuto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        lbl_ModelAuto.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_ModelAuto.setText("ID de modelo:");
        lbl_ModelAuto.setToolTipText("ID de un modelo existente en la base de datos(8).");
        Pan4.add(lbl_ModelAuto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        lbl_ColAuto.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_ColAuto.setText("ID de color:");
        lbl_ColAuto.setToolTipText("ID de un color existente en la base de datos(5).");
        Pan4.add(lbl_ColAuto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        lbl_PrecioAuto.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_PrecioAuto.setText("Precio:");
        lbl_PrecioAuto.setToolTipText("Precio del vehículo con posibilidad de 2 decimales.");
        Pan4.add(lbl_PrecioAuto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        lbl_EstadAuto.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_EstadAuto.setText("Estado:");
        lbl_EstadAuto.setToolTipText("(Nuevo, Seminuevo, Usado,...).");
        Pan4.add(lbl_EstadAuto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        txtf_DispAuto.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan4.add(txtf_DispAuto, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 200, 20));

        txtf_NSAuto.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan4.add(txtf_NSAuto, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 180, 20));

        txtf_ModelAuto.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan4.add(txtf_ModelAuto, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 200, 20));

        txtf_ColAuto.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan4.add(txtf_ColAuto, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 220, 20));

        txtf_PrecioAuto.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan4.add(txtf_PrecioAuto, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 240, 20));

        txtf_EstadAuto.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan4.add(txtf_EstadAuto, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 240, 20));

        jPanel1.add(Pan4, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 220, 340, 180));

        Pan5.setBorder(javax.swing.BorderFactory.createTitledBorder("Servicio"));
        Pan5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_IDPerServ.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_IDPerServ.setText("ID de periodo de servicio:");
        lbl_IDPerServ.setToolTipText("ID de un periodo existente en la base de datos(5).");
        Pan5.add(lbl_IDPerServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        lbl_IDServ.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_IDServ.setText("ID de servicio:");
        lbl_IDServ.setToolTipText("Tamaño: 11");
        Pan5.add(lbl_IDServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        lbl_AccionServ.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_AccionServ.setText("Acción:");
        lbl_AccionServ.setToolTipText("Acción del servicio.");
        Pan5.add(lbl_AccionServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        lbl_CompServ.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_CompServ.setText("Componente:");
        lbl_CompServ.setToolTipText("A qué componente se aplica el servicio.");
        Pan5.add(lbl_CompServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        lbl_PrecioServ.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_PrecioServ.setText("Precio:");
        lbl_PrecioServ.setToolTipText("Precio del servicio con posibilidad de 2 decimales.");
        Pan5.add(lbl_PrecioServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        lbl_DispServ.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_DispServ.setText("Disponibilidad:");
        lbl_DispServ.setToolTipText("(Disponible, No disponible,...).");
        Pan5.add(lbl_DispServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        lbl_IDTipServ.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lbl_IDTipServ.setText("ID de tipo de servicio:");
        lbl_IDTipServ.setToolTipText("ID de un tipo de servicio existente en la base de datos(5).");
        Pan5.add(lbl_IDTipServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        txtf_IDPerServ.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan5.add(txtf_IDPerServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 140, 140, 20));

        txtf_IDServ.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan5.add(txtf_IDServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 20, 200, 20));

        txtf_AccionServ.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan5.add(txtf_AccionServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(74, 40, 240, 20));

        txtf_CompServ.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan5.add(txtf_CompServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 60, 210, 20));

        txtf_PrecioServ.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan5.add(txtf_PrecioServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 80, 250, 20));

        txtf_DispServ.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan5.add(txtf_DispServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 100, 200, 20));

        txtf_IDTipServ.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        Pan5.add(txtf_IDTipServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 120, 160, 20));

        jPanel1.add(Pan5, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 410, 340, 180));

        btn_INSERTAR.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btn_INSERTAR.setText("INSERTAR");
        btn_INSERTAR.setToolTipText("Insertar registro en la tabla seleccionada.");
        btn_INSERTAR.setBorderPainted(false);
        btn_INSERTAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_INSERTARActionPerformed(evt);
            }
        });
        jPanel1.add(btn_INSERTAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 560, 140, 30));

        cbo_TablasInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_TablasInsertarActionPerformed(evt);
            }
        });
        jPanel1.add(cbo_TablasInsertar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 180, 170, 30));

        lbl_SeleccTab.setFont(new java.awt.Font("Malgun Gothic", 1, 20)); // NOI18N
        lbl_SeleccTab.setText("•Seleccione la tabla en la que desea insertar:");
        jPanel1.add(lbl_SeleccTab, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 430, 30));

        lbl_fondo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bck.png"))); // NOI18N
        jPanel1.add(lbl_fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1045, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    private void cbo_TablasInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_TablasInsertarActionPerformed
        //Condicionales dependiendo de la tabla seleccionada en el ComboBox
        switch(cbo_TablasInsertar.getSelectedIndex()){
            case 0:
                //Activar panel de Clientes y campos
                Pan1.setEnabled(true);
                txtf_IdClient.setEnabled(true);
                txtf_IdDomic.setEnabled(true);
                txtf_NomClient.setEnabled(true);
                txtf_ApClient.setEnabled(true);
                txtf_AmClient.setEnabled(true);
                txtf_TelClient.setEnabled(true);
                txtf_CelClient.setEnabled(true);
                txtf_RFClient.setEnabled(true);
                txtf_CURPClient.setEnabled(true);
                txtf_FechnacClient.setEnabled(true);
                //
                txtf_IdClient.setDocument(new LengthRestrictedDocument(11));
                txtf_IdDomic.setDocument(new LengthRestrictedDocument(11));
                txtf_NomClient.setDocument(new LengthRestrictedDocument(25));
                txtf_ApClient.setDocument(new LengthRestrictedDocument(15));
                txtf_AmClient.setDocument(new LengthRestrictedDocument(15));
                txtf_TelClient.setDocument(new LengthRestrictedDocument(7));
                txtf_CelClient.setDocument(new LengthRestrictedDocument(12));
                txtf_RFClient.setDocument(new LengthRestrictedDocument(12));
                txtf_CURPClient.setDocument(new LengthRestrictedDocument(18));
                txtf_FechnacClient.setDocument(new LengthRestrictedDocument(10));
                //Desactivar otros paneles y campos
                Pan2.setEnabled(false);
                txtf_IDDomic.setEnabled(false);
                txtf_CiudMun.setEnabled(false);
                txtf_CP.setEnabled(false);
                txtf_Colonia.setEnabled(false);
                txtf_Calle.setEnabled(false);
                txtf_Next.setEnabled(false);
                txtf_Nint.setEnabled(false);
                Pan3.setEnabled(false);
                txtf_EmailAsesor.setEnabled(false);
                txtf_IDAsesor.setEnabled(false);
                txtf_NomAsesor.setEnabled(false);
                txtf_ApAsesor.setEnabled(false);
                txtf_AmAsesor.setEnabled(false);
                txtf_TelAsesor.setEnabled(false);
                txtf_CelAsesor.setEnabled(false);
                Pan4.setEnabled(false);
                txtf_DispAuto.setEnabled(false);
                txtf_NSAuto.setEnabled(false);
                txtf_ModelAuto.setEnabled(false);
                txtf_ColAuto.setEnabled(false);
                txtf_PrecioAuto.setEnabled(false);
                txtf_EstadAuto.setEnabled(false);
                Pan5.setEnabled(false);
                txtf_IDPerServ.setEnabled(false);
                txtf_IDServ.setEnabled(false);
                txtf_AccionServ.setEnabled(false);
                txtf_CompServ.setEnabled(false);
                txtf_PrecioServ.setEnabled(false);
                txtf_DispServ.setEnabled(false);
                txtf_IDTipServ.setEnabled(false);
                break;
            case 1:
                //Activar panel de Domicilios y campos
                Pan2.setEnabled(true);
                txtf_IDDomic.setEnabled(true);
                txtf_CiudMun.setEnabled(true);
                txtf_CP.setEnabled(true);
                txtf_Colonia.setEnabled(true);
                txtf_Calle.setEnabled(true);
                txtf_Next.setEnabled(true);
                txtf_Nint.setEnabled(true);
                //
                txtf_IDDomic.setDocument(new LengthRestrictedDocument(11));
                txtf_CiudMun.setDocument(new LengthRestrictedDocument(25));
                txtf_CP.setDocument(new LengthRestrictedDocument(5));
                txtf_Colonia.setDocument(new LengthRestrictedDocument(25));
                txtf_Calle.setDocument(new LengthRestrictedDocument(25));
                txtf_Next.setDocument(new LengthRestrictedDocument(3));
                txtf_Nint.setDocument(new LengthRestrictedDocument(2));
                //Desactivar otros paneles y campos
                Pan1.setEnabled(false);
                txtf_IdClient.setEnabled(false);
                txtf_IdDomic.setEnabled(false);
                txtf_NomClient.setEnabled(false);
                txtf_ApClient.setEnabled(false);
                txtf_AmClient.setEnabled(false);
                txtf_TelClient.setEnabled(false);
                txtf_CelClient.setEnabled(false);
                txtf_RFClient.setEnabled(false);
                txtf_CURPClient.setEnabled(false);
                txtf_FechnacClient.setEnabled(false);
                Pan3.setEnabled(false);
                txtf_EmailAsesor.setEnabled(false);
                txtf_IDAsesor.setEnabled(false);
                txtf_NomAsesor.setEnabled(false);
                txtf_ApAsesor.setEnabled(false);
                txtf_AmAsesor.setEnabled(false);
                txtf_TelAsesor.setEnabled(false);
                txtf_CelAsesor.setEnabled(false);
                Pan4.setEnabled(false);
                txtf_DispAuto.setEnabled(false);
                txtf_NSAuto.setEnabled(false);
                txtf_ModelAuto.setEnabled(false);
                txtf_ColAuto.setEnabled(false);
                txtf_PrecioAuto.setEnabled(false);
                txtf_EstadAuto.setEnabled(false);
                Pan5.setEnabled(false);
                txtf_IDPerServ.setEnabled(false);
                txtf_IDServ.setEnabled(false);
                txtf_AccionServ.setEnabled(false);
                txtf_CompServ.setEnabled(false);
                txtf_PrecioServ.setEnabled(false);
                txtf_DispServ.setEnabled(false);
                txtf_IDTipServ.setEnabled(false);
                break;
            case 2:
                //Activar panel de Asesores y campos
                Pan3.setEnabled(true);
                txtf_EmailAsesor.setEnabled(true);
                txtf_IDAsesor.setEnabled(true);
                txtf_NomAsesor.setEnabled(true);
                txtf_ApAsesor.setEnabled(true);
                txtf_AmAsesor.setEnabled(true);
                txtf_TelAsesor.setEnabled(true);
                txtf_CelAsesor.setEnabled(true);
                //
                txtf_EmailAsesor.setDocument(new LengthRestrictedDocument(35));
                txtf_IDAsesor.setDocument(new LengthRestrictedDocument(8));
                txtf_NomAsesor.setDocument(new LengthRestrictedDocument(25));
                txtf_ApAsesor.setDocument(new LengthRestrictedDocument(15));
                txtf_AmAsesor.setDocument(new LengthRestrictedDocument(15));
                txtf_TelAsesor.setDocument(new LengthRestrictedDocument(7));
                txtf_CelAsesor.setDocument(new LengthRestrictedDocument(12));
                //Desactivar otros paneles y campos
                Pan1.setEnabled(false);
                txtf_IdClient.setEnabled(false);
                txtf_IdDomic.setEnabled(false);
                txtf_NomClient.setEnabled(false);
                txtf_ApClient.setEnabled(false);
                txtf_AmClient.setEnabled(false);
                txtf_TelClient.setEnabled(false);
                txtf_CelClient.setEnabled(false);
                txtf_RFClient.setEnabled(false);
                txtf_CURPClient.setEnabled(false);
                txtf_FechnacClient.setEnabled(false);
                Pan2.setEnabled(false);
                txtf_IDDomic.setEnabled(false);
                txtf_CiudMun.setEnabled(false);
                txtf_CP.setEnabled(false);
                txtf_Colonia.setEnabled(false);
                txtf_Calle.setEnabled(false);
                txtf_Next.setEnabled(false);
                txtf_Nint.setEnabled(false);
                Pan4.setEnabled(false);
                txtf_DispAuto.setEnabled(false);
                txtf_NSAuto.setEnabled(false);
                txtf_ModelAuto.setEnabled(false);
                txtf_ColAuto.setEnabled(false);
                txtf_PrecioAuto.setEnabled(false);
                txtf_EstadAuto.setEnabled(false);
                Pan5.setEnabled(false);
                txtf_IDPerServ.setEnabled(false);
                txtf_IDServ.setEnabled(false);
                txtf_AccionServ.setEnabled(false);
                txtf_CompServ.setEnabled(false);
                txtf_PrecioServ.setEnabled(false);
                txtf_DispServ.setEnabled(false);
                txtf_IDTipServ.setEnabled(false);
                break;
            case 3:
                //Activar panel de Automóviles y campos
                Pan4.setEnabled(true);
                txtf_DispAuto.setEnabled(true);
                txtf_NSAuto.setEnabled(true);
                txtf_ModelAuto.setEnabled(true);
                txtf_ColAuto.setEnabled(true);
                txtf_PrecioAuto.setEnabled(true);
                txtf_EstadAuto.setEnabled(true);
                //
                txtf_DispAuto.setDocument(new LengthRestrictedDocument(15));
                txtf_NSAuto.setDocument(new LengthRestrictedDocument(16));
                txtf_ModelAuto.setDocument(new LengthRestrictedDocument(8));
                txtf_ColAuto.setDocument(new LengthRestrictedDocument(5));
                txtf_PrecioAuto.setDocument(new LengthRestrictedDocument(10));
                txtf_EstadAuto.setDocument(new LengthRestrictedDocument(15));
                //Desactivar otros paneles y campos
                Pan1.setEnabled(false);
                txtf_IdClient.setEnabled(false);
                txtf_IdDomic.setEnabled(false);
                txtf_NomClient.setEnabled(false);
                txtf_ApClient.setEnabled(false);
                txtf_AmClient.setEnabled(false);
                txtf_TelClient.setEnabled(false);
                txtf_CelClient.setEnabled(false);
                txtf_RFClient.setEnabled(false);
                txtf_CURPClient.setEnabled(false);
                txtf_FechnacClient.setEnabled(false);
                Pan2.setEnabled(false);
                txtf_IDDomic.setEnabled(false);
                txtf_CiudMun.setEnabled(false);
                txtf_CP.setEnabled(false);
                txtf_Colonia.setEnabled(false);
                txtf_Calle.setEnabled(false);
                txtf_Next.setEnabled(false);
                txtf_Nint.setEnabled(false);
                Pan3.setEnabled(false);
                txtf_EmailAsesor.setEnabled(false);
                txtf_IDAsesor.setEnabled(false);
                txtf_NomAsesor.setEnabled(false);
                txtf_ApAsesor.setEnabled(false);
                txtf_AmAsesor.setEnabled(false);
                txtf_TelAsesor.setEnabled(false);
                txtf_CelAsesor.setEnabled(false);
                Pan5.setEnabled(false);
                txtf_IDPerServ.setEnabled(false);
                txtf_IDServ.setEnabled(false);
                txtf_AccionServ.setEnabled(false);
                txtf_CompServ.setEnabled(false);
                txtf_PrecioServ.setEnabled(false);
                txtf_DispServ.setEnabled(false);
                txtf_IDTipServ.setEnabled(false);
                break;
            case 4:
                //Activar panel de Servicios y campos
                Pan5.setEnabled(true);
                txtf_IDPerServ.setEnabled(true);
                txtf_IDServ.setEnabled(true);
                txtf_AccionServ.setEnabled(true);
                txtf_CompServ.setEnabled(true);
                txtf_PrecioServ.setEnabled(true);
                txtf_DispServ.setEnabled(true);
                txtf_IDTipServ.setEnabled(true);
                //
                txtf_IDPerServ.setDocument(new LengthRestrictedDocument(5));
                txtf_IDServ.setDocument(new LengthRestrictedDocument(11));
                txtf_AccionServ.setDocument(new LengthRestrictedDocument(25));
                txtf_CompServ.setDocument(new LengthRestrictedDocument(20));
                txtf_PrecioServ.setDocument(new LengthRestrictedDocument(8));
                txtf_DispServ.setDocument(new LengthRestrictedDocument(15));
                txtf_IDTipServ.setDocument(new LengthRestrictedDocument(5));
                //Desactivar otros paneles y campos
                Pan1.setEnabled(false);
                txtf_IdClient.setEnabled(false);
                txtf_IdDomic.setEnabled(false);
                txtf_NomClient.setEnabled(false);
                txtf_ApClient.setEnabled(false);
                txtf_AmClient.setEnabled(false);
                txtf_TelClient.setEnabled(false);
                txtf_CelClient.setEnabled(false);
                txtf_RFClient.setEnabled(false);
                txtf_CURPClient.setEnabled(false);
                txtf_FechnacClient.setEnabled(false);
                Pan2.setEnabled(false);
                txtf_IDDomic.setEnabled(false);
                txtf_CiudMun.setEnabled(false);
                txtf_CP.setEnabled(false);
                txtf_Colonia.setEnabled(false);
                txtf_Calle.setEnabled(false);
                txtf_Next.setEnabled(false);
                txtf_Nint.setEnabled(false);
                Pan3.setEnabled(false);
                txtf_EmailAsesor.setEnabled(false);
                txtf_IDAsesor.setEnabled(false);
                txtf_NomAsesor.setEnabled(false);
                txtf_ApAsesor.setEnabled(false);
                txtf_AmAsesor.setEnabled(false);
                txtf_TelAsesor.setEnabled(false);
                txtf_CelAsesor.setEnabled(false);
                Pan4.setEnabled(false);
                txtf_DispAuto.setEnabled(false);
                txtf_NSAuto.setEnabled(false);
                txtf_ModelAuto.setEnabled(false);
                txtf_ColAuto.setEnabled(false);
                txtf_PrecioAuto.setEnabled(false);
                txtf_EstadAuto.setEnabled(false);
                break;
            default:
                break;
        }
    }//GEN-LAST:event_cbo_TablasInsertarActionPerformed

    private void btn_INSERTARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_INSERTARActionPerformed
        //Condicionales dependiendo de la tabla seleccionada en el ComboBox al momento de insertar
        switch(cbo_TablasInsertar.getSelectedIndex()){
            case 0:
                //Obtener información de campos de panel de Clientes
                long info_idcliente, info_iddomic;
                String idcliente_str="", iddomic_str="", fechnacliente_str="", info_nomcliente="", info_apcliente="", info_amcliente="", info_telcliente="", info_celcliente="", info_rfcliente="", info_curpcliente="";
                Date info_fechnacliente=null;
                
                idcliente_str=txtf_IdClient.getText();
                info_idcliente=Long.parseLong(idcliente_str);
                iddomic_str=txtf_IdDomic.getText();
                info_iddomic=Long.parseLong(iddomic_str);
                
                info_nomcliente=txtf_NomClient.getText();
                info_apcliente=txtf_ApClient.getText();
                info_amcliente=txtf_AmClient.getText();
                info_telcliente=txtf_TelClient.getText();
                info_celcliente=txtf_CelClient.getText();
                info_rfcliente=txtf_RFClient.getText();
                info_curpcliente=txtf_CURPClient.getText();
                
                fechnacliente_str=txtf_FechnacClient.getText();
                info_fechnacliente=Date.valueOf(fechnacliente_str);
                
                //Crear bean de cliente con la información obtenida y con el tipo correcto 
                BeanClient vbc=new BeanClient(info_idcliente,info_iddomic,info_nomcliente,info_apcliente,info_amcliente,info_telcliente,info_celcliente,info_rfcliente,info_curpcliente,info_fechnacliente);
                //Invocar método correspondiente
                this.insertarCliente(vbc);
                break;
            case 1:
                //Obtener información de campos de panel de Domicilios
                long info2_iddomic;
                int info_nextdomic=0, info_nintdomic=0;
                String iddomic_str2="", nextdomic_str="", nintdomic_str="", info_ciudadmundomic="", info_cpdomic="", info_coloniadomic="", info_calledomic="";
                
                iddomic_str2=txtf_IDDomic.getText();
                info2_iddomic=Long.parseLong(iddomic_str2);
                
                nextdomic_str=txtf_Next.getText();
                info_nextdomic=Integer.parseInt(nextdomic_str);
                
                nintdomic_str=txtf_Nint.getText();
                info_nintdomic=Integer.parseInt(nintdomic_str);
                
                info_ciudadmundomic=txtf_CiudMun.getText();
                info_cpdomic=txtf_CP.getText();
                info_coloniadomic=txtf_Colonia.getText();
                info_calledomic=txtf_Calle.getText();
                
                //Crear bean de domicilio con la información obtenida y con el tipo correcto 
                BeanDomicilio vbd=new BeanDomicilio(info2_iddomic,info_ciudadmundomic,info_cpdomic,info_coloniadomic,info_calledomic,info_nextdomic,info_nintdomic);
                //Invocar método correspondiente
                this.insertarDomicilio(vbd);
                break;
            case 2:
                //Obtener información de campos de panel de Asesores
                int info_idasesor=0;
                String idasesor_str="", info_nomasesor="", info_apasesor="", info_amasesor="", info_telasesor="", info_celasesor="", info_emailasesor="";
                
                idasesor_str=txtf_IDAsesor.getText();
                info_idasesor=Integer.parseInt(idasesor_str);
                
                info_nomasesor=txtf_NomAsesor.getText();
                info_apasesor=txtf_ApAsesor.getText();
                info_amasesor=txtf_AmAsesor.getText();
                info_telasesor=txtf_TelAsesor.getText();
                info_celasesor=txtf_CelAsesor.getText();
                info_emailasesor=txtf_EmailAsesor.getText();
                        
                //Crear bean de asesor con la información obtenida y con el tipo correcto 
                BeanAsesor vba=new BeanAsesor(info_idasesor,info_nomasesor,info_apasesor, info_amasesor,info_telasesor,info_celasesor,info_emailasesor);
                //Invocar método correspondiente
                this.insertarAsesor(vba);
                break;
            case 3:
                //Obtener información de campos de panel de Automóviles
                long info_nserieauto=0;
                int info_idmodauto=0, info_idcolauto=0;
                double info_precauto=0.0;
                String nserieauto_str="", idmodauto_str="",idcolauto_str="",precauto_str="",info_estadauto="",info_dispauto="";
                
                nserieauto_str=txtf_NSAuto.getText();
                info_nserieauto=Long.parseLong(nserieauto_str);     
                idmodauto_str=txtf_ModelAuto.getText();
                info_idmodauto=Integer.parseInt(idmodauto_str);
                idcolauto_str=txtf_ColAuto.getText();
                info_idcolauto=Integer.parseInt(idcolauto_str);
                precauto_str=txtf_PrecioAuto.getText();
                info_precauto=Double.parseDouble(precauto_str);
                
                info_estadauto=txtf_EstadAuto.getText();
                info_dispauto=txtf_DispAuto.getText();
              
                //Crear bean de automóvil con la información obtenida y con el tipo correcto 
                BeanAuto vbau=new BeanAuto(info_nserieauto,info_idmodauto,info_idcolauto,info_precauto,info_estadauto,info_dispauto);
                //Invocar método correspondiente
                this.insertarAutomovil(vbau);
                break;
            case 4:
                //Obtener información de campos de panel de Servicios
                long info_idserv=0;
                double info_precioserv=0.0;
                int info_idtipserv=0, info_idperiserv=0;
                String idserv_str="", precioserv_str="", idtipserv_str="", idperiserv_str="", info_accserv="", info_compserv="", info_dispserv="";
                
                idserv_str=txtf_IDServ.getText();
                info_idserv=Long.parseLong(idserv_str);
                precioserv_str=txtf_PrecioServ.getText();
                info_precioserv=Double.parseDouble(precioserv_str);
                idtipserv_str=txtf_IDTipServ.getText();
                info_idtipserv=Integer.parseInt(idtipserv_str);
                idperiserv_str=txtf_IDPerServ.getText();
                info_idperiserv=Integer.parseInt(idperiserv_str);
                
                info_accserv=txtf_AccionServ.getText();
                info_compserv=txtf_CompServ.getText();
                info_dispserv=txtf_DispServ.getText();
                
                //Crear bean de servicio con la información obtenida y con el tipo correcto 
                BeanServ vbs=new BeanServ(info_idserv,info_accserv,info_compserv,info_precioserv,info_dispserv,info_idtipserv,info_idperiserv);
                //Invocar método correspondiente
                this.insertarServicio(vbs);
                break;
            default:
                break;
        }
    }//GEN-LAST:event_btn_INSERTARActionPerformed

    private void txtf_NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtf_NextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtf_NextActionPerformed

    private void txtf_CPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtf_CPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtf_CPActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        //
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //
    }//GEN-LAST:event_formWindowClosing

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
        //
    }//GEN-LAST:event_formWindowDeactivated

    private void txtf_IdClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtf_IdClientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtf_IdClientActionPerformed

    //Método de eventos sobreescrito
    @Override
    public void actionPerformed(ActionEvent ev){
        Object objevent=ev.getSource();
    }
    
    //MÉTODOS DE INSERCIÓN
    //Cliente
    public void insertarCliente(BeanClient bc){
        try{
            PreparedStatement ps1=vcon.prepareStatement("INSERT INTO cliente VALUES (?,?,?,?,?,?,?,?,?,?)");
            ps1.setLong(1, bc.getId_client());
            ps1.setLong(2, bc.getId_domicilio());
            ps1.setString(3, bc.getNomb_client());
            ps1.setString(4, bc.getAppat_client());
            ps1.setString(5, bc.getApmat_client());
            ps1.setString(6, bc.getTel_client());
            ps1.setString(7, bc.getCel_client());
            ps1.setString(8, bc.getRfc_client());
            ps1.setString(9, bc.getCurp_client());
            ps1.setDate(10, bc.getFechnac_client());
            int filas_afectadas=ps1.executeUpdate();
            JOptionPane.showMessageDialog(this, "¡Operación exitosa en 'Cliente'!, filas afectadas:"+filas_afectadas, "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }catch(SQLException sqle){
            JOptionPane.showMessageDialog(this, "Ha ocurrido una excepción: "+sqle.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    //Domicilio
    public void insertarDomicilio(BeanDomicilio bd){
        try{
            PreparedStatement ps2=vcon.prepareStatement("INSERT INTO domicilio VALUES (?,?,?,?,?,?,?)");
            ps2.setLong(1, bd.getId_domicilio());
            ps2.setString(2, bd.getCiudadmun_domicilio());
            ps2.setString(3, bd.getCp_domicilio());
            ps2.setString(4, bd.getColonia_domicilio());
            ps2.setString(5, bd.getCalle_domicilio());
            ps2.setInt(6, bd.getNext_domicilio());
            ps2.setInt(7, bd.getNint_domicilio());
            int filas_afectadas2=ps2.executeUpdate();
            JOptionPane.showMessageDialog(this, "¡Operación exitosa en 'Domicilio'!, filas afectadas:"+filas_afectadas2, "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }catch(SQLException sqle2){
            JOptionPane.showMessageDialog(this, "Ha ocurrido una excepción: "+sqle2.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    //Asesor
    public void insertarAsesor(BeanAsesor bas){
        try{
            PreparedStatement ps3=vcon.prepareStatement("INSERT INTO asesor VALUES (?,?,?,?,?,?,?)");
            ps3.setInt(1, bas.getId_asesor());
            ps3.setString(2, bas.getNomb_asesor());
            ps3.setString(3, bas.getAppat_asesor());
            ps3.setString(4, bas.getApmat_asesor());
            ps3.setString(5, bas.getTel_asesor());
            ps3.setString(6, bas.getCel_asesor());
            ps3.setString(7, bas.getEmail_asesor());
            int filas_afectadas3=ps3.executeUpdate();
            JOptionPane.showMessageDialog(this, "¡Operación exitosa en 'Asesor'!, filas afectadas:"+filas_afectadas3, "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }catch(SQLException sqle3){
            JOptionPane.showMessageDialog(this, "Ha ocurrido una excepción: "+sqle3.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    //Automóvil
    public void insertarAutomovil(BeanAuto bau){
        try{
            PreparedStatement ps4=vcon.prepareStatement("INSERT INTO automovil VALUES (?,?,?,?,?,?)");
            ps4.setLong(1, bau.getNserie_auto());
            ps4.setInt(2, bau.getId_modelauto());
            ps4.setInt(3, bau.getId_color());
            ps4.setDouble(4, bau.getPrecio_auto());
            ps4.setString(5, bau.getEstado_auto());
            ps4.setString(6, bau.getDisp_auto());
            int filas_afectadas4=ps4.executeUpdate();
            JOptionPane.showMessageDialog(this, "¡Operación exitosa en 'Automovil'!, filas afectadas:"+filas_afectadas4, "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }catch(SQLException sqle4){
            JOptionPane.showMessageDialog(this, "Ha ocurrido una excepción: "+sqle4.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    //Servicio
    public void insertarServicio(BeanServ bs){
        try{
            PreparedStatement ps5=vcon.prepareStatement("INSERT INTO servicio VALUES (?,?,?,?,?,?,?)");
            ps5.setLong(1, bs.getId_serv());
            ps5.setString(2, bs.getAccion_serv());
            ps5.setString(3, bs.getComponent_serv());
            ps5.setDouble(4, bs.getPrecio_serv());
            ps5.setString(5, bs.getDisp_serv());
            ps5.setInt(6, bs.getId_tiposerv());
            ps5.setInt(7, bs.getId_periodoserv());
            int filas_afectadas5=ps5.executeUpdate();
            JOptionPane.showMessageDialog(this, "¡Operación exitosa en 'Servicio'!, filas afectadas:"+filas_afectadas5, "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }catch(SQLException sqle5){
            JOptionPane.showMessageDialog(this, "Ha ocurrido una excepción: "+sqle5.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    //Modelo de automóvil
    public void insertarModeloAuto(ModeloAuto ma){
        try{
            PreparedStatement ps6=vcon.prepareStatement("INSERT INTO modelo VALUES (?,?,?,?)");
            ps6.setInt(1, ma.getId_modelauto());
            ps6.setInt(2, ma.getId_marca());
            ps6.setString(3, ma.getModel_auto());
            ps6.setString(4, ma.getAño_auto()); 
            int filas_afectadas6=ps6.executeUpdate();
            JOptionPane.showMessageDialog(this, "¡Operación exitosa en 'Modelo'!, filas afectadas:"+filas_afectadas6, "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }catch(SQLException sqle6){
            JOptionPane.showMessageDialog(this, "Ha ocurrido una excepción: "+sqle6.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaINSERT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaINSERT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaINSERT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaINSERT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaINSERT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Pan1;
    private javax.swing.JPanel Pan2;
    private javax.swing.JPanel Pan3;
    private javax.swing.JPanel Pan4;
    private javax.swing.JPanel Pan5;
    private javax.swing.JButton btn_INSERTAR;
    private javax.swing.JComboBox<String> cbo_TablasInsertar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_AccionServ;
    private javax.swing.JLabel lbl_AmAsesor;
    private javax.swing.JLabel lbl_AmClient;
    private javax.swing.JLabel lbl_ApAsesor;
    private javax.swing.JLabel lbl_ApClient;
    private javax.swing.JLabel lbl_CP;
    private javax.swing.JLabel lbl_CURPClient;
    private javax.swing.JLabel lbl_Calle;
    private javax.swing.JLabel lbl_CelAsesor;
    private javax.swing.JLabel lbl_CelClient;
    private javax.swing.JLabel lbl_CiudMun;
    private javax.swing.JLabel lbl_ColAuto;
    private javax.swing.JLabel lbl_Colonia;
    private javax.swing.JLabel lbl_CompServ;
    private javax.swing.JLabel lbl_DispAuto;
    private javax.swing.JLabel lbl_DispServ;
    private javax.swing.JLabel lbl_EmailAsesor;
    private javax.swing.JLabel lbl_EstadAuto;
    private javax.swing.JLabel lbl_FechanacClient;
    private javax.swing.JLabel lbl_IDAsesor;
    private javax.swing.JLabel lbl_IDDomic;
    private javax.swing.JLabel lbl_IDPerServ;
    private javax.swing.JLabel lbl_IDServ;
    private javax.swing.JLabel lbl_IDTipServ;
    private javax.swing.JLabel lbl_IdClient;
    private javax.swing.JLabel lbl_IdDomic;
    private javax.swing.JLabel lbl_ModelAuto;
    private javax.swing.JLabel lbl_NSAuto;
    private javax.swing.JLabel lbl_Next;
    private javax.swing.JLabel lbl_Nint;
    private javax.swing.JLabel lbl_NomAsesor;
    private javax.swing.JLabel lbl_NomClient;
    private javax.swing.JLabel lbl_PrecioAuto;
    private javax.swing.JLabel lbl_PrecioServ;
    private javax.swing.JLabel lbl_RFClient;
    private javax.swing.JLabel lbl_SeleccTab;
    private javax.swing.JLabel lbl_TelAsesor;
    private javax.swing.JLabel lbl_TelClient;
    private javax.swing.JLabel lbl_fondo;
    private javax.swing.JTextField txtf_AccionServ;
    private javax.swing.JTextField txtf_AmAsesor;
    private javax.swing.JTextField txtf_AmClient;
    private javax.swing.JTextField txtf_ApAsesor;
    private javax.swing.JTextField txtf_ApClient;
    private javax.swing.JTextField txtf_CP;
    private javax.swing.JTextField txtf_CURPClient;
    private javax.swing.JTextField txtf_Calle;
    private javax.swing.JTextField txtf_CelAsesor;
    private javax.swing.JTextField txtf_CelClient;
    private javax.swing.JTextField txtf_CiudMun;
    private javax.swing.JTextField txtf_ColAuto;
    private javax.swing.JTextField txtf_Colonia;
    private javax.swing.JTextField txtf_CompServ;
    private javax.swing.JTextField txtf_DispAuto;
    private javax.swing.JTextField txtf_DispServ;
    private javax.swing.JTextField txtf_EmailAsesor;
    private javax.swing.JTextField txtf_EstadAuto;
    private javax.swing.JTextField txtf_FechnacClient;
    private javax.swing.JTextField txtf_IDAsesor;
    private javax.swing.JTextField txtf_IDDomic;
    private javax.swing.JTextField txtf_IDPerServ;
    private javax.swing.JTextField txtf_IDServ;
    private javax.swing.JTextField txtf_IDTipServ;
    private javax.swing.JTextField txtf_IdClient;
    private javax.swing.JTextField txtf_IdDomic;
    private javax.swing.JTextField txtf_ModelAuto;
    private javax.swing.JTextField txtf_NSAuto;
    private javax.swing.JTextField txtf_Next;
    private javax.swing.JTextField txtf_Nint;
    private javax.swing.JTextField txtf_NomAsesor;
    private javax.swing.JTextField txtf_NomClient;
    private javax.swing.JTextField txtf_PrecioAuto;
    private javax.swing.JTextField txtf_PrecioServ;
    private javax.swing.JTextField txtf_RFClient;
    private javax.swing.JTextField txtf_TelAsesor;
    private javax.swing.JTextField txtf_TelClient;
    // End of variables declaration//GEN-END:variables
}
