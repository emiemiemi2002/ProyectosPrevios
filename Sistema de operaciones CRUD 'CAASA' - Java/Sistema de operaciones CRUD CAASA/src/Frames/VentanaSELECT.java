package Frames;

//Imports
import javax.swing.ImageIcon;
import Clases.*;
import java.sql.*;
import javax.swing.JOptionPane;
import java.util.Vector;
import javax.swing.table.*;

/**
 *
 * @author Propietario
 */
public class VentanaSELECT extends javax.swing.JFrame {

    //Conexión BD
    Conexion_BD_CAASA obclasecon=new Conexion_BD_CAASA();
    Connection con=obclasecon.conectar();
    
    //Contadores
    int contador_columsacons=0;
    int contador_columsparam=0;
    
    //DS
    public Vector<String> columnas_acons;
    public Vector<String> columnas_acons2 = new Vector<>(3);
    public Vector<String> columnas_param = new Vector<>(15);
    public String[] subcadenas;
    
    //
    String tabla_consultar;
    
    /**
     * Creates new form VentanaSELECT
     */
    public VentanaSELECT() {
        initComponents();
        //Icono de la ventana
        ImageIcon icon=new ImageIcon("C:\\Users\\Propietario\\Desktop\\Trabajos - Semestre 8\\Gestión de Proyectos de Software\\NBP\\Sistema de operaciones CRUD CAASA\\src\\Imagenes\\lcaasa.jpg");
        this.setIconImage(icon.getImage()); 
        //Elementos de cbo_Tablas
        cbo_Tablas.addItem("...");
        cbo_Tablas.addItem("asesor");
        cbo_Tablas.addItem("automovil");
        cbo_Tablas.addItem("cliente");
        cbo_Tablas.addItem("color");
        cbo_Tablas.addItem("compra");
        cbo_Tablas.addItem("contratacion");
        cbo_Tablas.addItem("domicilio");
        cbo_Tablas.addItem("forma_pago");
        cbo_Tablas.addItem("marca");
        cbo_Tablas.addItem("modelo");
        cbo_Tablas.addItem("periodo_serv");
        cbo_Tablas.addItem("plan_pago");
        cbo_Tablas.addItem("servicio");
        cbo_Tablas.addItem("tipo_serv");
        //Desactivar paneles y elementos
        pnl_Dos.setEnabled(false); 
        lbl_SeleccColumn.setEnabled(false);
        cbo_ColumnasTabla.setEnabled(false);
        lbl_SeleccionColumn.setEnabled(false);
        btn_ConfirmarSelColum.setEnabled(false);
        
        pnl_Tres.setEnabled(false); 
        lbl_SeleccColumnParam.setEnabled(false);
        cbo_ColumnasSelecc.setEnabled(false);
        lbl_SeleccionColumn2.setEnabled(false);
        btn_RestablecerSelColum2.setEnabled(false);
        btn_ConfirmarSelColum2.setEnabled(false);
        lbl_AjusteParam.setEnabled(false);
        lbl_SeleccColumnParam1.setEnabled(false);
        lbl_SeleccColumnParam2.setEnabled(false);
        lbl_SeleccColumnParam3.setEnabled(false);
        cbo_Operadores1.setEnabled(false);
        cbo_Operadores2.setEnabled(false);
        cbo_Operadores3.setEnabled(false);
        txtf_ValorCompC1.setEnabled(false);
        txtf_ValorCompC2.setEnabled(false);
        txtf_ValorCompC3.setEnabled(false);
        rb_1.setEnabled(false);
        rb_2.setEnabled(false);
        rb_3.setEnabled(false);
        cbo_Operadores11.setEnabled(false);
        cbo_Operadores22.setEnabled(false);
        cbo_Operadores33.setEnabled(false);
        txtf_ValorCompC11.setEnabled(false);
        txtf_ValorCompC22.setEnabled(false);
        txtf_ValorCompC33.setEnabled(false);
        
        btn_RealizarConsulta.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_RealizarConsulta = new javax.swing.JButton();
        lbl_reset = new javax.swing.JLabel();
        pnl_Dos = new javax.swing.JPanel();
        lbl_SeleccColumn = new javax.swing.JLabel();
        lbl_SeleccionColumn = new javax.swing.JLabel();
        cbo_ColumnasTabla = new javax.swing.JComboBox<>();
        btn_ConfirmarSelColum = new javax.swing.JButton();
        pnl_Uno = new javax.swing.JPanel();
        lbl_SeleccTabla = new javax.swing.JLabel();
        lbl_Resultados = new javax.swing.JLabel();
        cbo_Tablas = new javax.swing.JComboBox<>();
        pnl_Tres = new javax.swing.JPanel();
        lbl_SeleccColumnParam = new javax.swing.JLabel();
        lbl_SeleccionColumn2 = new javax.swing.JLabel();
        lbl_AjusteParam = new javax.swing.JLabel();
        btn_RestablecerSelColum2 = new javax.swing.JButton();
        btn_ConfirmarSelColum2 = new javax.swing.JButton();
        cbo_ColumnasSelecc = new javax.swing.JComboBox<>();
        txtf_ValorCompC11 = new javax.swing.JTextField();
        txtf_ValorCompC22 = new javax.swing.JTextField();
        txtf_ValorCompC33 = new javax.swing.JTextField();
        cbo_Operadores11 = new javax.swing.JComboBox<>();
        cbo_Operadores22 = new javax.swing.JComboBox<>();
        cbo_Operadores33 = new javax.swing.JComboBox<>();
        lbl_SeleccColumnParam1 = new javax.swing.JLabel();
        lbl_SeleccColumnParam2 = new javax.swing.JLabel();
        lbl_SeleccColumnParam3 = new javax.swing.JLabel();
        txtf_ValorCompC1 = new javax.swing.JTextField();
        cbo_Operadores1 = new javax.swing.JComboBox<>();
        rb_1 = new javax.swing.JRadioButton();
        rb_2 = new javax.swing.JRadioButton();
        rb_3 = new javax.swing.JRadioButton();
        cbo_Operadores2 = new javax.swing.JComboBox<>();
        txtf_ValorCompC2 = new javax.swing.JTextField();
        cbo_Operadores3 = new javax.swing.JComboBox<>();
        txtf_ValorCompC3 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_Resultados = new javax.swing.JTable();
        lbl_fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Consulte registros");
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_RealizarConsulta.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btn_RealizarConsulta.setForeground(new java.awt.Color(153, 0, 0));
        btn_RealizarConsulta.setText("CONSULTAR");
        btn_RealizarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RealizarConsultaActionPerformed(evt);
            }
        });
        jPanel1.add(btn_RealizarConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 570, -1, 27));

        lbl_reset.setForeground(new java.awt.Color(102, 0, 0));
        jPanel1.add(lbl_reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 580, -1, -1));

        lbl_SeleccColumn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        lbl_SeleccColumn.setText(">Seleccione la(s) columna(s) a consultar:");

        lbl_SeleccionColumn.setFont(new java.awt.Font("Malgun Gothic", 0, 12)); // NOI18N
        lbl_SeleccionColumn.setText("Selección:");

        cbo_ColumnasTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_ColumnasTablaActionPerformed(evt);
            }
        });

        btn_ConfirmarSelColum.setBackground(new java.awt.Color(0, 153, 0));
        btn_ConfirmarSelColum.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        btn_ConfirmarSelColum.setText("Confirmar");
        btn_ConfirmarSelColum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ConfirmarSelColumActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_DosLayout = new javax.swing.GroupLayout(pnl_Dos);
        pnl_Dos.setLayout(pnl_DosLayout);
        pnl_DosLayout.setHorizontalGroup(
            pnl_DosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_DosLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pnl_DosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_ConfirmarSelColum)
                    .addComponent(lbl_SeleccionColumn)
                    .addGroup(pnl_DosLayout.createSequentialGroup()
                        .addComponent(lbl_SeleccColumn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbo_ColumnasTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        pnl_DosLayout.setVerticalGroup(
            pnl_DosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_DosLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pnl_DosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_SeleccColumn)
                    .addComponent(cbo_ColumnasTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_SeleccionColumn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_ConfirmarSelColum)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel1.add(pnl_Dos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 460, 100));

        lbl_SeleccTabla.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        lbl_SeleccTabla.setText(">Elija la tabla de la que desea consultar:");

        lbl_Resultados.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 24)); // NOI18N
        lbl_Resultados.setForeground(new java.awt.Color(153, 0, 0));
        lbl_Resultados.setText("RESULTADOS");

        cbo_Tablas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_TablasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_UnoLayout = new javax.swing.GroupLayout(pnl_Uno);
        pnl_Uno.setLayout(pnl_UnoLayout);
        pnl_UnoLayout.setHorizontalGroup(
            pnl_UnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_UnoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_SeleccTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbo_Tablas, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 219, Short.MAX_VALUE)
                .addComponent(lbl_Resultados, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
        pnl_UnoLayout.setVerticalGroup(
            pnl_UnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_UnoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_UnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_SeleccTabla)
                    .addComponent(cbo_Tablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_Resultados))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(pnl_Uno, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 1020, -1));

        lbl_SeleccColumnParam.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        lbl_SeleccColumnParam.setText(">Seleccione la(s) columna(s) parámetro:");

        lbl_SeleccionColumn2.setFont(new java.awt.Font("Malgun Gothic", 0, 12)); // NOI18N
        lbl_SeleccionColumn2.setText("Selección:");

        lbl_AjusteParam.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        lbl_AjusteParam.setText("Ajuste el parámetro a cumplir por cada columna para el resultado:");

        btn_RestablecerSelColum2.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        btn_RestablecerSelColum2.setText("Reestablecer");
        btn_RestablecerSelColum2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RestablecerSelColum2ActionPerformed(evt);
            }
        });

        btn_ConfirmarSelColum2.setBackground(new java.awt.Color(0, 153, 0));
        btn_ConfirmarSelColum2.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        btn_ConfirmarSelColum2.setText("Confirmar");
        btn_ConfirmarSelColum2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ConfirmarSelColum2ActionPerformed(evt);
            }
        });

        cbo_ColumnasSelecc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_ColumnasSeleccActionPerformed(evt);
            }
        });

        txtf_ValorCompC22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtf_ValorCompC22ActionPerformed(evt);
            }
        });

        cbo_Operadores11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_Operadores11ActionPerformed(evt);
            }
        });

        lbl_SeleccColumnParam1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        lbl_SeleccColumnParam1.setText("Columna #:");

        lbl_SeleccColumnParam2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        lbl_SeleccColumnParam2.setText("Columna #:");

        lbl_SeleccColumnParam3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        lbl_SeleccColumnParam3.setText("Columna #:");

        cbo_Operadores1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_Operadores1ActionPerformed(evt);
            }
        });

        rb_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_1ActionPerformed(evt);
            }
        });

        rb_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_2ActionPerformed(evt);
            }
        });

        rb_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_3ActionPerformed(evt);
            }
        });

        cbo_Operadores2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_Operadores2ActionPerformed(evt);
            }
        });

        cbo_Operadores3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_Operadores3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_TresLayout = new javax.swing.GroupLayout(pnl_Tres);
        pnl_Tres.setLayout(pnl_TresLayout);
        pnl_TresLayout.setHorizontalGroup(
            pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_TresLayout.createSequentialGroup()
                .addGroup(pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_TresLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_SeleccionColumn2)
                            .addGroup(pnl_TresLayout.createSequentialGroup()
                                .addComponent(lbl_SeleccColumnParam)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbo_ColumnasSelecc, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnl_TresLayout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addGroup(pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnl_TresLayout.createSequentialGroup()
                                        .addGroup(pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(pnl_TresLayout.createSequentialGroup()
                                                .addComponent(cbo_Operadores3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtf_ValorCompC3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(pnl_TresLayout.createSequentialGroup()
                                                .addComponent(cbo_Operadores2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtf_ValorCompC2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(rb_2)
                                            .addComponent(rb_3)))
                                    .addGroup(pnl_TresLayout.createSequentialGroup()
                                        .addComponent(cbo_Operadores1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtf_ValorCompC1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rb_1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbo_Operadores22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbo_Operadores11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbo_Operadores33, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtf_ValorCompC33, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtf_ValorCompC11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtf_ValorCompC22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(pnl_TresLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btn_RestablecerSelColum2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_ConfirmarSelColum2))
                    .addGroup(pnl_TresLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_SeleccColumnParam1)
                            .addComponent(lbl_AjusteParam)
                            .addComponent(lbl_SeleccColumnParam2)
                            .addComponent(lbl_SeleccColumnParam3))))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        pnl_TresLayout.setVerticalGroup(
            pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_TresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_SeleccColumnParam)
                    .addGroup(pnl_TresLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(cbo_ColumnasSelecc, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_SeleccionColumn2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_RestablecerSelColum2)
                    .addComponent(btn_ConfirmarSelColum2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_TresLayout.createSequentialGroup()
                        .addComponent(lbl_AjusteParam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtf_ValorCompC11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbo_Operadores11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_SeleccColumnParam1)
                            .addComponent(txtf_ValorCompC1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbo_Operadores1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnl_TresLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(rb_1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rb_2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_SeleccColumnParam2)
                        .addComponent(cbo_Operadores22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbo_Operadores2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtf_ValorCompC2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtf_ValorCompC22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rb_3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl_TresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtf_ValorCompC33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbo_Operadores33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_SeleccColumnParam3)
                        .addComponent(cbo_Operadores3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtf_ValorCompC3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13))
        );

        jPanel1.add(pnl_Tres, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 460, 240));

        jScrollPane1.setViewportView(Tabla_Resultados);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(472, 230, 560, 360));

        lbl_fondo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bck.png"))); // NOI18N
        jPanel1.add(lbl_fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1045, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1045, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbo_TablasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_TablasActionPerformed
        //
        switch(cbo_Tablas.getSelectedIndex()){
            case 0:
            //Poner contador de columnas seleccionadas de nuevo en 0
            contador_columsacons=0;
            //Restaurar valores de elementos de pnl_Dos
            lbl_SeleccionColumn.setText("Selección:");
            cbo_ColumnasTabla.removeAllItems();
            //Desactivar pnl_Dos/pnl_Tres y elementos 
            pnl_Dos.setEnabled(false); //-----
            lbl_SeleccColumn.setEnabled(false);
            cbo_ColumnasTabla.setEnabled(false);
            lbl_SeleccionColumn.setEnabled(false);
            btn_ConfirmarSelColum.setEnabled(false);

            pnl_Tres.setEnabled(false); //-----
            lbl_SeleccColumnParam.setEnabled(false);
            cbo_ColumnasSelecc.setEnabled(false);
            lbl_SeleccionColumn2.setEnabled(false);
            btn_RestablecerSelColum2.setEnabled(false);
            btn_ConfirmarSelColum2.setEnabled(false);
            lbl_AjusteParam.setEnabled(false);
            lbl_SeleccColumnParam1.setEnabled(false);
            lbl_SeleccColumnParam2.setEnabled(false);
            lbl_SeleccColumnParam3.setEnabled(false);
            cbo_Operadores1.setEnabled(false);
            cbo_Operadores2.setEnabled(false);
            cbo_Operadores3.setEnabled(false);
            txtf_ValorCompC1.setEnabled(false);
            txtf_ValorCompC2.setEnabled(false);
            txtf_ValorCompC3.setEnabled(false);
            rb_1.setEnabled(false);
            rb_2.setEnabled(false);
            rb_3.setEnabled(false);
            cbo_Operadores11.setEnabled(false);
            cbo_Operadores22.setEnabled(false);
            cbo_Operadores33.setEnabled(false);
            txtf_ValorCompC11.setEnabled(false);
            txtf_ValorCompC22.setEnabled(false);
            txtf_ValorCompC33.setEnabled(false);

            btn_RealizarConsulta.setEnabled(false);
                break;
            case 1: //Asesor
            pnl_Dos.setEnabled(true); //-----------------------------------Activar pnl_Dos y elementos
            lbl_SeleccColumn.setEnabled(true);
            cbo_ColumnasTabla.setEnabled(true);
            lbl_SeleccionColumn.setEnabled(true);
            btn_ConfirmarSelColum.setEnabled(false);

            //Poner contador de columnas seleccionadas de nuevo en 0, restaurar label de selección y limpiar vector de columnas a consultar
            contador_columsacons=0;
            lbl_SeleccionColumn.setText("Selección:");
            if(columnas_acons!=null){
                columnas_acons.removeAllElements();
            }
            if(columnas_acons2!=null){
                columnas_acons2.removeAllElements();
            }

            //Limpiar cbo_ColumnasTabla y agregar nombres de columnas de 'asesor'
            cbo_ColumnasTabla.removeAllItems();
            cbo_ColumnasTabla.addItem("...");
            this.obtenerColumnasTabla("asesor");
            cbo_ColumnasTabla.addItem("*");
                break;
            case 2://Automovil
            pnl_Dos.setEnabled(true); //-----------------------------------Activar pnl_Dos y elementos
            lbl_SeleccColumn.setEnabled(true);
            cbo_ColumnasTabla.setEnabled(true);
            lbl_SeleccionColumn.setEnabled(true);
            btn_ConfirmarSelColum.setEnabled(false);

            //Poner contador de columnas seleccionadas de nuevo en 0, restaurar label de selección y limpiar vector de columnas a consultar
            contador_columsacons=0;
            lbl_SeleccionColumn.setText("Selección:");
            if(columnas_acons!=null){
                columnas_acons.removeAllElements();
            }
            if(columnas_acons2!=null){
                columnas_acons2.removeAllElements();
            }

            //Limpiar cbo_ColumnasTabla y agregar nombres de columnas de 'automovil'
            cbo_ColumnasTabla.removeAllItems();
            cbo_ColumnasTabla.addItem("...");
            this.obtenerColumnasTabla("automovil");
            cbo_ColumnasTabla.addItem("*");
                break;
            case 3://Cliente
            pnl_Dos.setEnabled(true); //-----------------------------------Activar pnl_Dos y elementos
            lbl_SeleccColumn.setEnabled(true);
            cbo_ColumnasTabla.setEnabled(true);
            lbl_SeleccionColumn.setEnabled(true);
            btn_ConfirmarSelColum.setEnabled(false);

            //Poner contador de columnas seleccionadas de nuevo en 0, restaurar label de selección y limpiar vector de columnas a consultar
            contador_columsacons=0;
            lbl_SeleccionColumn.setText("Selección:");
            if(columnas_acons!=null){
                columnas_acons.removeAllElements();
            }
            if(columnas_acons2!=null){
                columnas_acons2.removeAllElements();
            }

            //Limpiar cbo_ColumnasTabla y agregar nombres de columnas de 'cliente'
            cbo_ColumnasTabla.removeAllItems();
            cbo_ColumnasTabla.addItem("...");
            this.obtenerColumnasTabla("cliente");
            cbo_ColumnasTabla.addItem("*");
                break;
            case 4://Color
            pnl_Dos.setEnabled(true); //-----------------------------------Activar pnl_Dos y elementos
            lbl_SeleccColumn.setEnabled(true);
            cbo_ColumnasTabla.setEnabled(true);
            lbl_SeleccionColumn.setEnabled(true);
            btn_ConfirmarSelColum.setEnabled(false);

            //Poner contador de columnas seleccionadas de nuevo en 0, restaurar label de selección y limpiar vector de columnas a consultar
            contador_columsacons=0;
            lbl_SeleccionColumn.setText("Selección:");
            if(columnas_acons!=null){
                columnas_acons.removeAllElements();
            }
            if(columnas_acons2!=null){
                columnas_acons2.removeAllElements();
            }

            //Limpiar cbo_ColumnasTabla y agregar nombres de columnas de 'color'
            cbo_ColumnasTabla.removeAllItems();
            cbo_ColumnasTabla.addItem("...");
            this.obtenerColumnasTabla("color");
            cbo_ColumnasTabla.addItem("*");
                break;
            case 5://Compra
            pnl_Dos.setEnabled(true); //-----------------------------------Activar pnl_Dos y elementos
            lbl_SeleccColumn.setEnabled(true);
            cbo_ColumnasTabla.setEnabled(true);
            lbl_SeleccionColumn.setEnabled(true);
            btn_ConfirmarSelColum.setEnabled(false);

            //Poner contador de columnas seleccionadas de nuevo en 0, restaurar label de selección y limpiar vector de columnas a consultar
            contador_columsacons=0;
            lbl_SeleccionColumn.setText("Selección:");
            if(columnas_acons!=null){
                columnas_acons.removeAllElements();
            }
            if(columnas_acons2!=null){
                columnas_acons2.removeAllElements();
            }

            //Limpiar cbo_ColumnasTabla y agregar nombres de columnas de 'compra'
            cbo_ColumnasTabla.removeAllItems();
            cbo_ColumnasTabla.addItem("...");
            this.obtenerColumnasTabla("compra");
            cbo_ColumnasTabla.addItem("*");
                break;
            case 6://Contratacion
            pnl_Dos.setEnabled(true); //-----------------------------------Activar pnl_Dos y elementos
            lbl_SeleccColumn.setEnabled(true);
            cbo_ColumnasTabla.setEnabled(true);
            lbl_SeleccionColumn.setEnabled(true);
            btn_ConfirmarSelColum.setEnabled(false);

            //Poner contador de columnas seleccionadas de nuevo en 0, restaurar label de selección y limpiar vector de columnas a consultar
            contador_columsacons=0;
            lbl_SeleccionColumn.setText("Selección:");
            if(columnas_acons!=null){
                columnas_acons.removeAllElements();
            }
            if(columnas_acons2!=null){
                columnas_acons2.removeAllElements();
            }

            //Limpiar cbo_ColumnasTabla y agregar nombres de columnas de 'contratacion'
            cbo_ColumnasTabla.removeAllItems();
            cbo_ColumnasTabla.addItem("...");
            this.obtenerColumnasTabla("contratacion");
            cbo_ColumnasTabla.addItem("*");
                break;
            case 7://Domicilio
            pnl_Dos.setEnabled(true); //-----------------------------------Activar pnl_Dos y elementos
            lbl_SeleccColumn.setEnabled(true);
            cbo_ColumnasTabla.setEnabled(true);
            lbl_SeleccionColumn.setEnabled(true);
            btn_ConfirmarSelColum.setEnabled(false);

            //Poner contador de columnas seleccionadas de nuevo en 0, restaurar label de selección y limpiar vector de columnas a consultar
            contador_columsacons=0;
            lbl_SeleccionColumn.setText("Selección:");
            if(columnas_acons!=null){
                columnas_acons.removeAllElements();
            }
            if(columnas_acons2!=null){
                columnas_acons2.removeAllElements();
            }

            //Limpiar cbo_ColumnasTabla y agregar nombres de columnas de 'domicilio'
            cbo_ColumnasTabla.removeAllItems();
            cbo_ColumnasTabla.addItem("...");
            this.obtenerColumnasTabla("domicilio");
            cbo_ColumnasTabla.addItem("*");
                break;
            case 8://Forma pago
            pnl_Dos.setEnabled(true); //-----------------------------------Activar pnl_Dos y elementos
            lbl_SeleccColumn.setEnabled(true);
            cbo_ColumnasTabla.setEnabled(true);
            lbl_SeleccionColumn.setEnabled(true);
            btn_ConfirmarSelColum.setEnabled(false);

            //Poner contador de columnas seleccionadas de nuevo en 0, restaurar label de selección y limpiar vector de columnas a consultar
            contador_columsacons=0;
            lbl_SeleccionColumn.setText("Selección:");
            if(columnas_acons!=null){
                columnas_acons.removeAllElements();
            }
            if(columnas_acons2!=null){
                columnas_acons2.removeAllElements();
            }

            //Limpiar cbo_ColumnasTabla y agregar nombres de columnas de 'forma_pago'
            cbo_ColumnasTabla.removeAllItems();
            cbo_ColumnasTabla.addItem("...");
            this.obtenerColumnasTabla("forma_pago");
            cbo_ColumnasTabla.addItem("*");
                break;
            case 9://Marca
            pnl_Dos.setEnabled(true); //-----------------------------------Activar pnl_Dos y elementos
            lbl_SeleccColumn.setEnabled(true);
            cbo_ColumnasTabla.setEnabled(true);
            lbl_SeleccionColumn.setEnabled(true);
            btn_ConfirmarSelColum.setEnabled(false);

            //Poner contador de columnas seleccionadas de nuevo en 0, restaurar label de selección y limpiar vector de columnas a consultar
            contador_columsacons=0;
            lbl_SeleccionColumn.setText("Selección:");
            if(columnas_acons!=null){
                columnas_acons.removeAllElements();
            }
            if(columnas_acons2!=null){
                columnas_acons2.removeAllElements();
            }

            //Limpiar cbo_ColumnasTabla y agregar nombres de columnas de 'marca'
            cbo_ColumnasTabla.removeAllItems();
            cbo_ColumnasTabla.addItem("...");
            this.obtenerColumnasTabla("marca");
            cbo_ColumnasTabla.addItem("*");
                break;
            case 10://Modelo
            pnl_Dos.setEnabled(true); //-----------------------------------Activar pnl_Dos y elementos
            lbl_SeleccColumn.setEnabled(true);
            cbo_ColumnasTabla.setEnabled(true);
            lbl_SeleccionColumn.setEnabled(true);
            btn_ConfirmarSelColum.setEnabled(false);

            //Poner contador de columnas seleccionadas de nuevo en 0, restaurar label de selección y limpiar vector de columnas a consultar
            contador_columsacons=0;
            lbl_SeleccionColumn.setText("Selección:");
            if(columnas_acons!=null){
                columnas_acons.removeAllElements();
            }
            if(columnas_acons2!=null){
                columnas_acons2.removeAllElements();
            }

            //Limpiar cbo_ColumnasTabla y agregar nombres de columnas de 'modelo'
            cbo_ColumnasTabla.removeAllItems();
            cbo_ColumnasTabla.addItem("...");
            this.obtenerColumnasTabla("modelo");
            cbo_ColumnasTabla.addItem("*");
                break;
            case 11://Periodo serv
            pnl_Dos.setEnabled(true); //-----------------------------------Activar pnl_Dos y elementos
            lbl_SeleccColumn.setEnabled(true);
            cbo_ColumnasTabla.setEnabled(true);
            lbl_SeleccionColumn.setEnabled(true);
            btn_ConfirmarSelColum.setEnabled(false);

            //Poner contador de columnas seleccionadas de nuevo en 0, restaurar label de selección y limpiar vector de columnas a consultar
            contador_columsacons=0;
            lbl_SeleccionColumn.setText("Selección:");
            if(columnas_acons!=null){
                columnas_acons.removeAllElements();
            }
            if(columnas_acons2!=null){
                columnas_acons2.removeAllElements();
            }

            //Limpiar cbo_ColumnasTabla y agregar nombres de columnas de 'periodo_serv'
            cbo_ColumnasTabla.removeAllItems();
            cbo_ColumnasTabla.addItem("...");
            this.obtenerColumnasTabla("periodo_serv");
            cbo_ColumnasTabla.addItem("*");
                break;
            case 12://Plan pago
            pnl_Dos.setEnabled(true); //-----------------------------------Activar pnl_Dos y elementos
            lbl_SeleccColumn.setEnabled(true);
            cbo_ColumnasTabla.setEnabled(true);
            lbl_SeleccionColumn.setEnabled(true);
            btn_ConfirmarSelColum.setEnabled(false);

            //Poner contador de columnas seleccionadas de nuevo en 0, restaurar label de selección y limpiar vector de columnas a consultar
            contador_columsacons=0;
            lbl_SeleccionColumn.setText("Selección:");
            if(columnas_acons!=null){
                columnas_acons.removeAllElements();
            }
            if(columnas_acons2!=null){
                columnas_acons2.removeAllElements();
            }

            //Limpiar cbo_ColumnasTabla y agregar nombres de columnas de 'plan_pago'
            cbo_ColumnasTabla.removeAllItems();
            cbo_ColumnasTabla.addItem("...");
            this.obtenerColumnasTabla("plan_pago");
            cbo_ColumnasTabla.addItem("*");
                break;
            case 13://Servicio
            pnl_Dos.setEnabled(true); //-----------------------------------Activar pnl_Dos y elementos
            lbl_SeleccColumn.setEnabled(true);
            cbo_ColumnasTabla.setEnabled(true);
            lbl_SeleccionColumn.setEnabled(true);
            btn_ConfirmarSelColum.setEnabled(false);

            //Poner contador de columnas seleccionadas de nuevo en 0, restaurar label de selección y limpiar vector de columnas a consultar
            contador_columsacons=0;
            lbl_SeleccionColumn.setText("Selección:");
            if(columnas_acons!=null){
                columnas_acons.removeAllElements();
            }
            if(columnas_acons2!=null){
                columnas_acons2.removeAllElements();
            }

            //Limpiar cbo_ColumnasTabla y agregar nombres de columnas de 'servicio'
            cbo_ColumnasTabla.removeAllItems();
            cbo_ColumnasTabla.addItem("...");
            this.obtenerColumnasTabla("servicio");
            cbo_ColumnasTabla.addItem("*");
                break;
            case 14://Tipo serv
            pnl_Dos.setEnabled(true); //-----------------------------------Activar pnl_Dos y elementos
            lbl_SeleccColumn.setEnabled(true);
            cbo_ColumnasTabla.setEnabled(true);
            lbl_SeleccionColumn.setEnabled(true);
            btn_ConfirmarSelColum.setEnabled(false);

            //Poner contador de columnas seleccionadas de nuevo en 0, restaurar label de selección y limpiar vector de columnas a consultar
            contador_columsacons=0;
            lbl_SeleccionColumn.setText("Selección:");
            if(columnas_acons!=null){
                columnas_acons.removeAllElements();
            }
            if(columnas_acons2!=null){
                columnas_acons2.removeAllElements();
            }

            //Limpiar cbo_ColumnasTabla y agregar nombres de columnas de 'tipo_serv'
            cbo_ColumnasTabla.removeAllItems();
            cbo_ColumnasTabla.addItem("...");
            this.obtenerColumnasTabla("tipo_serv");
            cbo_ColumnasTabla.addItem("*");
                break;
            default:
                break;
        }
    }//GEN-LAST:event_cbo_TablasActionPerformed

    private void cbo_ColumnasTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_ColumnasTablaActionPerformed
        //Variables (String para almacenar la columna a consultar e int para almacenar el número de elementos del combo de columnas de la tabla)
        String column_aconsultar="";
        int no_items=cbo_ColumnasTabla.getItemCount();
        //Si el número de items del cbo es mayor a cero, hacer...
        if(no_items>0){
            //Obtener elemento seleccionado, condiciónales por si se selecciona '*' o '...' u otro.
            column_aconsultar=cbo_ColumnasTabla.getSelectedItem().toString();
            if(column_aconsultar.equals("*")){
                //---Reestablecer y setear etiqueta de selección, remover elementos y desactivar cbo de columnas y activar botón de confirmar la selección
                lbl_SeleccionColumn.setText("Selección:");
                lbl_SeleccionColumn.setText(lbl_SeleccionColumn.getText()+" Todo |");
                cbo_ColumnasTabla.removeAllItems();
                cbo_ColumnasTabla.setEnabled(false);
                btn_ConfirmarSelColum.setEnabled(true);
                //Si columnas_acons2 no está nulo, remover todos los elementos---
                if(columnas_acons2!=null){
                    columnas_acons2.removeAllElements();
                }
                //Añadir a columnas_acons '*'---
                columnas_acons = new Vector<>(1);
                columnas_acons.add("*");
            }else if(column_aconsultar.equals("...")){
                //
            }else{
                //Añadir elemento seleccionado a label de selección, remover elemento seleccionado del combo, aumentar en 1 el contador y activar el botón de confirmación---
                lbl_SeleccionColumn.setText(lbl_SeleccionColumn.getText()+" "+column_aconsultar+" | ");
                cbo_ColumnasTabla.removeItem(column_aconsultar);
                contador_columsacons=contador_columsacons+1;
                btn_ConfirmarSelColum.setEnabled(true);
                //Almacenar en subcadenas[] la columna a consultar sin texto adicional. Si columnas_acons2 no es nulo, añadir el primer elemento de subcadenas[]
                subcadenas=column_aconsultar.split(" ");
                columnas_acons2.add(subcadenas[0]);
            }
            //Si el contador llega a 3, ya no se pueden seleccionar más columnas
            if(contador_columsacons==3){
                cbo_ColumnasTabla.setEnabled(false);
                cbo_ColumnasTabla.removeAllItems();
            }
        }
    }//GEN-LAST:event_cbo_ColumnasTablaActionPerformed

    private void btn_ConfirmarSelColumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ConfirmarSelColumActionPerformed
        //Obtener nombre de tabla seleccionada
        tabla_consultar=cbo_Tablas.getSelectedItem().toString();
        //Activar pnl_Tres y componentes a usar
        pnl_Tres.setEnabled(true);
        lbl_SeleccColumnParam.setEnabled(true);
        cbo_ColumnasSelecc.setEnabled(true);
        lbl_SeleccionColumn2.setEnabled(true);
        
        cbo_ColumnasSelecc.addItem("...");
        //Desactivar componentes pnl_Uno
        lbl_SeleccTabla.setEnabled(false);
        cbo_Tablas.setEnabled(false);
        //Desctivar pnl_Dos y componentes
        pnl_Dos.setEnabled(false); 
        lbl_SeleccColumn.setEnabled(false);
        cbo_ColumnasTabla.setEnabled(false);
        lbl_SeleccionColumn.setEnabled(false);
        btn_ConfirmarSelColum.setEnabled(false);
        //-------------------------------------------------------------
        if(columnas_acons!=null && columnas_acons.isEmpty()==false){
            //
            this.obtenerColumnasTabla2(tabla_consultar);
        }
        if(columnas_acons2!=null && columnas_acons2.isEmpty()==false){
            //
            int elementosvdos=columnas_acons2.size();
            for(int i=0;i<elementosvdos;i++){
                cbo_ColumnasSelecc.addItem(columnas_acons2.get(i));
            }
        }
    }//GEN-LAST:event_btn_ConfirmarSelColumActionPerformed

    private void cbo_ColumnasSeleccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_ColumnasSeleccActionPerformed
        //Variables
        String colum_parametro="";
        int no_items2=cbo_ColumnasSelecc.getItemCount();
        //Si el número de items del cbo es mayor a cero, hacer...
        if(no_items2>0){
            //Obtener elemento seleccionado
            colum_parametro=cbo_ColumnasSelecc.getSelectedItem().toString();
            //Condicionales por si es '...' u otro
            if(colum_parametro.equals("...")){
                //
            }else{
                lbl_SeleccionColumn2.setText(lbl_SeleccionColumn2.getText()+" "+colum_parametro+" | ");
                cbo_ColumnasSelecc.removeItem(colum_parametro); 
                contador_columsparam=contador_columsparam+1;
                btn_ConfirmarSelColum2.setEnabled(true);
                btn_RestablecerSelColum2.setEnabled(true);
                //Añadir elemento a arreglo
                columnas_param.add(colum_parametro);
            }
            //Si el contador llega a 3, ya no se pueden seleccionar más columnas
            if(contador_columsparam==3){
                cbo_ColumnasSelecc.setEnabled(false);
                cbo_ColumnasSelecc.removeAllItems();
            }
        }
    }//GEN-LAST:event_cbo_ColumnasSeleccActionPerformed

    private void btn_RestablecerSelColum2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RestablecerSelColum2ActionPerformed
        //Activar cbo
        cbo_ColumnasSelecc.setEnabled(true);
        //Setear contador a 0 
        contador_columsparam=0;        
        //Resetear etiqueta de selección 
        lbl_SeleccionColumn2.setText("Selección:");
        //Limpiar cbo y añadir primer elemento '...'
        cbo_ColumnasSelecc.removeAllItems();
        cbo_ColumnasSelecc.addItem("...");
        //Restaurar elementos del cbo
        if(columnas_acons2!=null && columnas_acons2.isEmpty()==false){
            //
            int sizevdos=columnas_acons2.size();
            for(int e=0;e<sizevdos;e++){
                cbo_ColumnasSelecc.addItem(columnas_acons2.get(e));
            }
        }else if(columnas_acons!=null && columnas_acons.isEmpty()==false){
            //
            this.obtenerColumnasTabla2(tabla_consultar);
        }
        //Desactivar botones
        btn_ConfirmarSelColum2.setEnabled(false);
        btn_RestablecerSelColum2.setEnabled(false);
        //
        if(columnas_param!=null){
            columnas_param.removeAllElements();
        }
    }//GEN-LAST:event_btn_RestablecerSelColum2ActionPerformed

    private void btn_ConfirmarSelColum2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ConfirmarSelColum2ActionPerformed
        //Variables
        String tc1="", tc2="", tc3="";
        //Desactivación/activación componentes
        lbl_SeleccColumnParam.setEnabled(false);
        cbo_ColumnasSelecc.removeAllItems();
        cbo_ColumnasSelecc.setEnabled(false);
        lbl_SeleccionColumn2.setEnabled(false);
        btn_RestablecerSelColum2.setEnabled(false);
        btn_ConfirmarSelColum2.setEnabled(false);
       
        lbl_AjusteParam.setEnabled(true);
        btn_RealizarConsulta.setEnabled(true);
        //Si se seleccionaron n número de columnas parámetro...
        switch (contador_columsparam) {
            case 1:
                //Activar componentes 
                lbl_SeleccColumnParam1.setEnabled(true);
                cbo_Operadores1.setEnabled(true);
                //Setear nombre de columna
                lbl_SeleccColumnParam1.setText(columnas_param.get(0)+":");
                //Obtener tipo de dato de columna
                tc1=this.obtenerTipoColumna(tabla_consultar, columnas_param.get(0));
                //
                if(tc1.equals("int")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem(">");
                    cbo_Operadores1.addItem("<");
                    cbo_Operadores1.addItem(">=");
                    cbo_Operadores1.addItem("<=");
                    cbo_Operadores1.addItem("BETWEEN");
                    cbo_Operadores1.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem(">");
                    cbo_Operadores11.addItem("<");
                    cbo_Operadores11.addItem(">=");
                    cbo_Operadores11.addItem("<=");

                }else if(tc1.equals("bigint")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem(">");
                    cbo_Operadores1.addItem("<");
                    cbo_Operadores1.addItem(">=");
                    cbo_Operadores1.addItem("<=");
                    cbo_Operadores1.addItem("BETWEEN");
                    cbo_Operadores1.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem(">");
                    cbo_Operadores11.addItem("<");
                    cbo_Operadores11.addItem(">=");
                    cbo_Operadores11.addItem("<=");

                }else if(tc1.equals("varchar")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem("LIKE");
                    cbo_Operadores1.addItem("NOT LIKE");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem("LIKE");
                    cbo_Operadores11.addItem("NOT LIKE");
                }else if(tc1.equals("decimal")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem(">");
                    cbo_Operadores1.addItem("<");
                    cbo_Operadores1.addItem(">=");
                    cbo_Operadores1.addItem("<=");
                    cbo_Operadores1.addItem("BETWEEN");
                    cbo_Operadores1.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem(">");
                    cbo_Operadores11.addItem("<");
                    cbo_Operadores11.addItem(">=");
                    cbo_Operadores11.addItem("<=");

                }else if(tc1.equals("date")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem(">");
                    cbo_Operadores1.addItem("<");
                    cbo_Operadores1.addItem(">=");
                    cbo_Operadores1.addItem("<=");
                    cbo_Operadores1.addItem("BETWEEN");
                    cbo_Operadores1.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem(">");
                    cbo_Operadores11.addItem("<");
                    cbo_Operadores11.addItem(">=");
                    cbo_Operadores11.addItem("<=");

                }else if(tc1.equals("time")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem(">");
                    cbo_Operadores1.addItem("<");
                    cbo_Operadores1.addItem(">=");
                    cbo_Operadores1.addItem("<=");
                    cbo_Operadores1.addItem("BETWEEN");
                    cbo_Operadores1.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem(">");
                    cbo_Operadores11.addItem("<");
                    cbo_Operadores11.addItem(">=");
                    cbo_Operadores11.addItem("<=");

                }
                break;
            case 2:
                //Activar componentes 
                lbl_SeleccColumnParam1.setEnabled(true);
                cbo_Operadores1.setEnabled(true);
                
                lbl_SeleccColumnParam2.setEnabled(true);
                cbo_Operadores2.setEnabled(true);
                //Setear nombres de columnas
                lbl_SeleccColumnParam1.setText(columnas_param.get(0)+":");
                lbl_SeleccColumnParam2.setText(columnas_param.get(1)+":");
                //Obtener tipo de dato de columnas
                tc1=this.obtenerTipoColumna(tabla_consultar, columnas_param.get(0));
                tc2=this.obtenerTipoColumna(tabla_consultar, columnas_param.get(1));
                //
                if(tc1.equals("int")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem(">");
                    cbo_Operadores1.addItem("<");
                    cbo_Operadores1.addItem(">=");
                    cbo_Operadores1.addItem("<=");
                    cbo_Operadores1.addItem("BETWEEN");
                    cbo_Operadores1.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem(">");
                    cbo_Operadores11.addItem("<");
                    cbo_Operadores11.addItem(">=");
                    cbo_Operadores11.addItem("<=");

                }else if(tc1.equals("bigint")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem(">");
                    cbo_Operadores1.addItem("<");
                    cbo_Operadores1.addItem(">=");
                    cbo_Operadores1.addItem("<=");
                    cbo_Operadores1.addItem("BETWEEN");
                    cbo_Operadores1.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem(">");
                    cbo_Operadores11.addItem("<");
                    cbo_Operadores11.addItem(">=");
                    cbo_Operadores11.addItem("<=");

                }else if(tc1.equals("varchar")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem("LIKE");
                    cbo_Operadores1.addItem("NOT LIKE");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem("LIKE");
                    cbo_Operadores11.addItem("NOT LIKE");
                }else if(tc1.equals("decimal")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem(">");
                    cbo_Operadores1.addItem("<");
                    cbo_Operadores1.addItem(">=");
                    cbo_Operadores1.addItem("<=");
                    cbo_Operadores1.addItem("BETWEEN");
                    cbo_Operadores1.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem(">");
                    cbo_Operadores11.addItem("<");
                    cbo_Operadores11.addItem(">=");
                    cbo_Operadores11.addItem("<=");

                }else if(tc1.equals("date")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem(">");
                    cbo_Operadores1.addItem("<");
                    cbo_Operadores1.addItem(">=");
                    cbo_Operadores1.addItem("<=");
                    cbo_Operadores1.addItem("BETWEEN");
                    cbo_Operadores1.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem(">");
                    cbo_Operadores11.addItem("<");
                    cbo_Operadores11.addItem(">=");
                    cbo_Operadores11.addItem("<=");

                }else if(tc1.equals("time")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem(">");
                    cbo_Operadores1.addItem("<");
                    cbo_Operadores1.addItem(">=");
                    cbo_Operadores1.addItem("<=");
                    cbo_Operadores1.addItem("BETWEEN");
                    cbo_Operadores1.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem(">");
                    cbo_Operadores11.addItem("<");
                    cbo_Operadores11.addItem(">=");
                    cbo_Operadores11.addItem("<=");

                }
                //
                if(tc2.equals("int")){
                    //
                    cbo_Operadores2.addItem("=");
                    cbo_Operadores2.addItem("<>");
                    cbo_Operadores2.addItem(">");
                    cbo_Operadores2.addItem("<");
                    cbo_Operadores2.addItem(">=");
                    cbo_Operadores2.addItem("<=");
                    cbo_Operadores2.addItem("BETWEEN");
                    cbo_Operadores2.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores22.addItem("=");
                    cbo_Operadores22.addItem("<>");
                    cbo_Operadores22.addItem(">");
                    cbo_Operadores22.addItem("<");
                    cbo_Operadores22.addItem(">=");
                    cbo_Operadores22.addItem("<=");

                }else if(tc2.equals("bigint")){
                    //
                    cbo_Operadores2.addItem("=");
                    cbo_Operadores2.addItem("<>");
                    cbo_Operadores2.addItem(">");
                    cbo_Operadores2.addItem("<");
                    cbo_Operadores2.addItem(">=");
                    cbo_Operadores2.addItem("<=");
                    cbo_Operadores2.addItem("BETWEEN");
                    cbo_Operadores2.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores22.addItem("=");
                    cbo_Operadores22.addItem("<>");
                    cbo_Operadores22.addItem(">");
                    cbo_Operadores22.addItem("<");
                    cbo_Operadores22.addItem(">=");
                    cbo_Operadores22.addItem("<=");

                }else if(tc2.equals("varchar")){
                    //
                    cbo_Operadores2.addItem("=");
                    cbo_Operadores2.addItem("<>");
                    cbo_Operadores2.addItem("LIKE");
                    cbo_Operadores2.addItem("NOT LIKE");
                    //
                    cbo_Operadores22.addItem("=");
                    cbo_Operadores22.addItem("<>");
                    cbo_Operadores22.addItem("LIKE");
                    cbo_Operadores22.addItem("NOT LIKE");
                }else if(tc2.equals("decimal")){
                    //
                    cbo_Operadores2.addItem("=");
                    cbo_Operadores2.addItem("<>");
                    cbo_Operadores2.addItem(">");
                    cbo_Operadores2.addItem("<");
                    cbo_Operadores2.addItem(">=");
                    cbo_Operadores2.addItem("<=");
                    cbo_Operadores2.addItem("BETWEEN");
                    cbo_Operadores2.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores22.addItem("=");
                    cbo_Operadores22.addItem("<>");
                    cbo_Operadores22.addItem(">");
                    cbo_Operadores22.addItem("<");
                    cbo_Operadores22.addItem(">=");
                    cbo_Operadores22.addItem("<=");

                }else if(tc2.equals("date")){
                    //
                    cbo_Operadores2.addItem("=");
                    cbo_Operadores2.addItem("<>");
                    cbo_Operadores2.addItem(">");
                    cbo_Operadores2.addItem("<");
                    cbo_Operadores2.addItem(">=");
                    cbo_Operadores2.addItem("<=");
                    cbo_Operadores2.addItem("BETWEEN");
                    cbo_Operadores2.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores22.addItem("=");
                    cbo_Operadores22.addItem("<>");
                    cbo_Operadores22.addItem(">");
                    cbo_Operadores22.addItem("<");
                    cbo_Operadores22.addItem(">=");
                    cbo_Operadores22.addItem("<=");

                }else if(tc2.equals("time")){
                    //
                    cbo_Operadores2.addItem("=");
                    cbo_Operadores2.addItem("<>");
                    cbo_Operadores2.addItem(">");
                    cbo_Operadores2.addItem("<");
                    cbo_Operadores2.addItem(">=");
                    cbo_Operadores2.addItem("<=");
                    cbo_Operadores2.addItem("BETWEEN");
                    cbo_Operadores2.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores22.addItem("=");
                    cbo_Operadores22.addItem("<>");
                    cbo_Operadores22.addItem(">");
                    cbo_Operadores22.addItem("<");
                    cbo_Operadores22.addItem(">=");
                    cbo_Operadores22.addItem("<=");

                }
                break;
            case 3:
                //Activar componentes
                lbl_SeleccColumnParam1.setEnabled(true);
                cbo_Operadores1.setEnabled(true);
                
                lbl_SeleccColumnParam2.setEnabled(true);
                cbo_Operadores2.setEnabled(true);
                
                lbl_SeleccColumnParam3.setEnabled(true);
                cbo_Operadores3.setEnabled(true);
                //Setear nombres de columnas
                lbl_SeleccColumnParam1.setText(columnas_param.get(0)+":");
                lbl_SeleccColumnParam2.setText(columnas_param.get(1)+":");
                lbl_SeleccColumnParam3.setText(columnas_param.get(2)+":");
                //Obtener tipo de dato de columnas
                tc1=this.obtenerTipoColumna(tabla_consultar, columnas_param.get(0));
                tc2=this.obtenerTipoColumna(tabla_consultar, columnas_param.get(1));
                tc3=this.obtenerTipoColumna(tabla_consultar, columnas_param.get(2));
                //
                if(tc1.equals("int")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem(">");
                    cbo_Operadores1.addItem("<");
                    cbo_Operadores1.addItem(">=");
                    cbo_Operadores1.addItem("<=");
                    cbo_Operadores1.addItem("BETWEEN");
                    cbo_Operadores1.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem(">");
                    cbo_Operadores11.addItem("<");
                    cbo_Operadores11.addItem(">=");
                    cbo_Operadores11.addItem("<=");

                }else if(tc1.equals("bigint")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem(">");
                    cbo_Operadores1.addItem("<");
                    cbo_Operadores1.addItem(">=");
                    cbo_Operadores1.addItem("<=");
                    cbo_Operadores1.addItem("BETWEEN");
                    cbo_Operadores1.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem(">");
                    cbo_Operadores11.addItem("<");
                    cbo_Operadores11.addItem(">=");
                    cbo_Operadores11.addItem("<=");

                }else if(tc1.equals("varchar")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem("LIKE");
                    cbo_Operadores1.addItem("NOT LIKE");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem("LIKE");
                    cbo_Operadores11.addItem("NOT LIKE");
                }else if(tc1.equals("decimal")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem(">");
                    cbo_Operadores1.addItem("<");
                    cbo_Operadores1.addItem(">=");
                    cbo_Operadores1.addItem("<=");
                    cbo_Operadores1.addItem("BETWEEN");
                    cbo_Operadores1.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem(">");
                    cbo_Operadores11.addItem("<");
                    cbo_Operadores11.addItem(">=");
                    cbo_Operadores11.addItem("<=");

                }else if(tc1.equals("date")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem(">");
                    cbo_Operadores1.addItem("<");
                    cbo_Operadores1.addItem(">=");
                    cbo_Operadores1.addItem("<=");
                    cbo_Operadores1.addItem("BETWEEN");
                    cbo_Operadores1.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem(">");
                    cbo_Operadores11.addItem("<");
                    cbo_Operadores11.addItem(">=");
                    cbo_Operadores11.addItem("<=");

                }else if(tc1.equals("time")){
                    //
                    cbo_Operadores1.addItem("=");
                    cbo_Operadores1.addItem("<>");
                    cbo_Operadores1.addItem(">");
                    cbo_Operadores1.addItem("<");
                    cbo_Operadores1.addItem(">=");
                    cbo_Operadores1.addItem("<=");
                    cbo_Operadores1.addItem("BETWEEN");
                    cbo_Operadores1.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores11.addItem("=");
                    cbo_Operadores11.addItem("<>");
                    cbo_Operadores11.addItem(">");
                    cbo_Operadores11.addItem("<");
                    cbo_Operadores11.addItem(">=");
                    cbo_Operadores11.addItem("<=");

                }
                //
                if(tc2.equals("int")){
                    //
                    cbo_Operadores2.addItem("=");
                    cbo_Operadores2.addItem("<>");
                    cbo_Operadores2.addItem(">");
                    cbo_Operadores2.addItem("<");
                    cbo_Operadores2.addItem(">=");
                    cbo_Operadores2.addItem("<=");
                    cbo_Operadores2.addItem("BETWEEN");
                    cbo_Operadores2.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores22.addItem("=");
                    cbo_Operadores22.addItem("<>");
                    cbo_Operadores22.addItem(">");
                    cbo_Operadores22.addItem("<");
                    cbo_Operadores22.addItem(">=");
                    cbo_Operadores22.addItem("<=");

                }else if(tc2.equals("bigint")){
                    //
                    cbo_Operadores2.addItem("=");
                    cbo_Operadores2.addItem("<>");
                    cbo_Operadores2.addItem(">");
                    cbo_Operadores2.addItem("<");
                    cbo_Operadores2.addItem(">=");
                    cbo_Operadores2.addItem("<=");
                    cbo_Operadores2.addItem("BETWEEN");
                    cbo_Operadores2.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores22.addItem("=");
                    cbo_Operadores22.addItem("<>");
                    cbo_Operadores22.addItem(">");
                    cbo_Operadores22.addItem("<");
                    cbo_Operadores22.addItem(">=");
                    cbo_Operadores22.addItem("<=");

                }else if(tc2.equals("varchar")){
                    //
                    cbo_Operadores2.addItem("=");
                    cbo_Operadores2.addItem("<>");
                    cbo_Operadores2.addItem("LIKE");
                    cbo_Operadores2.addItem("NOT LIKE");
                    //
                    cbo_Operadores22.addItem("=");
                    cbo_Operadores22.addItem("<>");
                    cbo_Operadores22.addItem("LIKE");
                    cbo_Operadores22.addItem("NOT LIKE");
                }else if(tc2.equals("decimal")){
                    //
                    cbo_Operadores2.addItem("=");
                    cbo_Operadores2.addItem("<>");
                    cbo_Operadores2.addItem(">");
                    cbo_Operadores2.addItem("<");
                    cbo_Operadores2.addItem(">=");
                    cbo_Operadores2.addItem("<=");
                    cbo_Operadores2.addItem("BETWEEN");
                    cbo_Operadores2.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores22.addItem("=");
                    cbo_Operadores22.addItem("<>");
                    cbo_Operadores22.addItem(">");
                    cbo_Operadores22.addItem("<");
                    cbo_Operadores22.addItem(">=");
                    cbo_Operadores22.addItem("<=");

                }else if(tc2.equals("date")){
                    //
                    cbo_Operadores2.addItem("=");
                    cbo_Operadores2.addItem("<>");
                    cbo_Operadores2.addItem(">");
                    cbo_Operadores2.addItem("<");
                    cbo_Operadores2.addItem(">=");
                    cbo_Operadores2.addItem("<=");
                    cbo_Operadores2.addItem("BETWEEN");
                    cbo_Operadores2.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores22.addItem("=");
                    cbo_Operadores22.addItem("<>");
                    cbo_Operadores22.addItem(">");
                    cbo_Operadores22.addItem("<");
                    cbo_Operadores22.addItem(">=");
                    cbo_Operadores22.addItem("<=");

                }else if(tc2.equals("time")){
                    //
                    cbo_Operadores2.addItem("=");
                    cbo_Operadores2.addItem("<>");
                    cbo_Operadores2.addItem(">");
                    cbo_Operadores2.addItem("<");
                    cbo_Operadores2.addItem(">=");
                    cbo_Operadores2.addItem("<=");
                    cbo_Operadores2.addItem("BETWEEN");
                    cbo_Operadores2.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores22.addItem("=");
                    cbo_Operadores22.addItem("<>");
                    cbo_Operadores22.addItem(">");
                    cbo_Operadores22.addItem("<");
                    cbo_Operadores22.addItem(">=");
                    cbo_Operadores22.addItem("<=");

                }
                //
                if(tc3.equals("int")){
                    //
                    cbo_Operadores3.addItem("=");
                    cbo_Operadores3.addItem("<>");
                    cbo_Operadores3.addItem(">");
                    cbo_Operadores3.addItem("<");
                    cbo_Operadores3.addItem(">=");
                    cbo_Operadores3.addItem("<=");
                    cbo_Operadores3.addItem("BETWEEN");
                    cbo_Operadores3.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores33.addItem("=");
                    cbo_Operadores33.addItem("<>");
                    cbo_Operadores33.addItem(">");
                    cbo_Operadores33.addItem("<");
                    cbo_Operadores33.addItem(">=");
                    cbo_Operadores33.addItem("<=");

                }else if(tc3.equals("bigint")){
                    //
                    cbo_Operadores3.addItem("=");
                    cbo_Operadores3.addItem("<>");
                    cbo_Operadores3.addItem(">");
                    cbo_Operadores3.addItem("<");
                    cbo_Operadores3.addItem(">=");
                    cbo_Operadores3.addItem("<=");
                    cbo_Operadores3.addItem("BETWEEN");
                    cbo_Operadores3.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores33.addItem("=");
                    cbo_Operadores33.addItem("<>");
                    cbo_Operadores33.addItem(">");
                    cbo_Operadores33.addItem("<");
                    cbo_Operadores33.addItem(">=");
                    cbo_Operadores33.addItem("<=");

                }else if(tc3.equals("varchar")){
                    //
                    cbo_Operadores3.addItem("=");
                    cbo_Operadores3.addItem("<>");
                    cbo_Operadores3.addItem("LIKE");
                    cbo_Operadores3.addItem("NOT LIKE");
                    //
                    cbo_Operadores33.addItem("=");
                    cbo_Operadores33.addItem("<>");
                    cbo_Operadores33.addItem("LIKE");
                    cbo_Operadores33.addItem("NOT LIKE");
                }else if(tc3.equals("decimal")){
                    //
                    cbo_Operadores3.addItem("=");
                    cbo_Operadores3.addItem("<>");
                    cbo_Operadores3.addItem(">");
                    cbo_Operadores3.addItem("<");
                    cbo_Operadores3.addItem(">=");
                    cbo_Operadores3.addItem("<=");
                    cbo_Operadores3.addItem("BETWEEN");
                    cbo_Operadores3.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores33.addItem("=");
                    cbo_Operadores33.addItem("<>");
                    cbo_Operadores33.addItem(">");
                    cbo_Operadores33.addItem("<");
                    cbo_Operadores33.addItem(">=");
                    cbo_Operadores33.addItem("<=");

                }else if(tc3.equals("date")){
                    //
                    cbo_Operadores3.addItem("=");
                    cbo_Operadores3.addItem("<>");
                    cbo_Operadores3.addItem(">");
                    cbo_Operadores3.addItem("<");
                    cbo_Operadores3.addItem(">=");
                    cbo_Operadores3.addItem("<=");
                    cbo_Operadores3.addItem("BETWEEN");
                    cbo_Operadores3.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores33.addItem("=");
                    cbo_Operadores33.addItem("<>");
                    cbo_Operadores33.addItem(">");
                    cbo_Operadores33.addItem("<");
                    cbo_Operadores33.addItem(">=");
                    cbo_Operadores33.addItem("<=");

                }else if(tc3.equals("time")){
                    //
                    cbo_Operadores3.addItem("=");
                    cbo_Operadores3.addItem("<>");
                    cbo_Operadores3.addItem(">");
                    cbo_Operadores3.addItem("<");
                    cbo_Operadores3.addItem(">=");
                    cbo_Operadores3.addItem("<=");
                    cbo_Operadores3.addItem("BETWEEN");
                    cbo_Operadores3.addItem("NOT BETWEEN");
                    //
                    cbo_Operadores33.addItem("=");
                    cbo_Operadores33.addItem("<>");
                    cbo_Operadores33.addItem(">");
                    cbo_Operadores33.addItem("<");
                    cbo_Operadores33.addItem(">=");
                    cbo_Operadores33.addItem("<=");

                }
                break;
            default:
                break;
        }
    }//GEN-LAST:event_btn_ConfirmarSelColum2ActionPerformed

    private void rb_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_1ActionPerformed
        //Si rb es marcado, si se desmarca
        if(rb_1.isSelected()){
            cbo_Operadores11.setEnabled(true);
            cbo_Operadores11.setSelectedIndex(-1);
            txtf_ValorCompC11.setEnabled(true);
            txtf_ValorCompC11.setText("");
            //
        }else if(rb_1.isSelected()==false){
            cbo_Operadores11.setEnabled(false);
            cbo_Operadores11.setSelectedIndex(-1);
            txtf_ValorCompC11.setEnabled(false);
            txtf_ValorCompC11.setText("");
            //
        }
    }//GEN-LAST:event_rb_1ActionPerformed

    private void rb_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_2ActionPerformed
        //Si rb es marcado, si se desmarca
        if(rb_2.isSelected()){
            cbo_Operadores22.setEnabled(true);
            cbo_Operadores22.setSelectedIndex(-1);
            txtf_ValorCompC22.setEnabled(true);
            txtf_ValorCompC22.setText("");
            //
        }else if(rb_2.isSelected()==false){
            cbo_Operadores22.setEnabled(false);
            cbo_Operadores22.setSelectedIndex(-1);
            txtf_ValorCompC22.setEnabled(false);
            txtf_ValorCompC22.setText("");
            //
        }
    }//GEN-LAST:event_rb_2ActionPerformed

    private void rb_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_3ActionPerformed
        //Si rb es marcado, si se desmarca
        if(rb_3.isSelected()){
            cbo_Operadores33.setEnabled(true);
            cbo_Operadores33.setSelectedIndex(-1);
            txtf_ValorCompC33.setEnabled(true);
            txtf_ValorCompC33.setText("");
            //
        }else if(rb_3.isSelected()==false){
            cbo_Operadores33.setEnabled(false);
            cbo_Operadores33.setSelectedIndex(-1);
            txtf_ValorCompC33.setEnabled(false);
            txtf_ValorCompC33.setText("");
            //
        }
    }//GEN-LAST:event_rb_3ActionPerformed

    private void cbo_Operadores1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_Operadores1ActionPerformed
        //Variables
        String op_seleccionado1="";
        int no_items1=cbo_Operadores1.getItemCount();
        //
        if(no_items1>0){
            op_seleccionado1=cbo_Operadores1.getSelectedItem().toString();
            if(op_seleccionado1.equals("BETWEEN")){
                txtf_ValorCompC1.setEnabled(true);
                txtf_ValorCompC1.setText("");
                rb_1.setEnabled(false);
                rb_1.setSelected(false);
                cbo_Operadores11.setEnabled(false);
                cbo_Operadores11.setSelectedIndex(-1);
                txtf_ValorCompC11.setEnabled(true);
                txtf_ValorCompC11.setText("");
            }else if(op_seleccionado1.equals("NOT BETWEEN")){
                txtf_ValorCompC1.setEnabled(true);
                txtf_ValorCompC1.setText("");
                rb_1.setEnabled(false);
                rb_1.setSelected(false);
                cbo_Operadores11.setEnabled(false);
                cbo_Operadores11.setSelectedIndex(-1);
                txtf_ValorCompC11.setEnabled(true);
                txtf_ValorCompC11.setText("");
            }else{
                txtf_ValorCompC1.setEnabled(true);
                txtf_ValorCompC1.setText("");
                rb_1.setEnabled(true);
                rb_1.setSelected(false);
                cbo_Operadores11.setEnabled(false);
                cbo_Operadores11.setSelectedIndex(-1);
                txtf_ValorCompC11.setEnabled(false);
                txtf_ValorCompC11.setText("");
            }
        }
    }//GEN-LAST:event_cbo_Operadores1ActionPerformed

    private void cbo_Operadores2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_Operadores2ActionPerformed
        //Variables
        String op_seleccionado2="";
        int no_items2=cbo_Operadores2.getItemCount();
        //
        if(no_items2>0){
            op_seleccionado2=cbo_Operadores2.getSelectedItem().toString();
            if(op_seleccionado2.equals("BETWEEN")){
                txtf_ValorCompC2.setEnabled(true);
                txtf_ValorCompC2.setText("");
                rb_2.setEnabled(false);
                rb_2.setSelected(false);
                cbo_Operadores22.setEnabled(false);
                cbo_Operadores22.setSelectedIndex(-1);
                txtf_ValorCompC22.setEnabled(true);
                txtf_ValorCompC22.setText("");
            }else if(op_seleccionado2.equals("NOT BETWEEN")){
                txtf_ValorCompC2.setEnabled(true);
                txtf_ValorCompC2.setText("");
                rb_2.setEnabled(false);
                rb_2.setSelected(false);
                cbo_Operadores22.setEnabled(false);
                cbo_Operadores22.setSelectedIndex(-1);
                txtf_ValorCompC22.setEnabled(true);
                txtf_ValorCompC22.setText("");
            }else{
                txtf_ValorCompC2.setEnabled(true);
                txtf_ValorCompC2.setText("");
                rb_2.setEnabled(true);
                rb_2.setSelected(false);
                cbo_Operadores22.setEnabled(false);
                cbo_Operadores22.setSelectedIndex(-1);
                txtf_ValorCompC22.setEnabled(false);
                txtf_ValorCompC22.setText("");
            }
        }
    }//GEN-LAST:event_cbo_Operadores2ActionPerformed

    private void cbo_Operadores3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_Operadores3ActionPerformed
        //Variables
        String op_seleccionado3="";
        int no_items3=cbo_Operadores3.getItemCount();
        //
        if(no_items3>0){
            op_seleccionado3=cbo_Operadores3.getSelectedItem().toString();
            if(op_seleccionado3.equals("BETWEEN")){
                txtf_ValorCompC3.setEnabled(true);
                txtf_ValorCompC3.setText("");
                rb_3.setEnabled(false);
                rb_3.setSelected(false);
                cbo_Operadores33.setEnabled(false);
                cbo_Operadores33.setSelectedIndex(-1);
                txtf_ValorCompC33.setEnabled(true);
                txtf_ValorCompC33.setText("");
            }else if(op_seleccionado3.equals("NOT BETWEEN")){
                txtf_ValorCompC3.setEnabled(true);
                txtf_ValorCompC3.setText("");
                rb_3.setEnabled(false);
                rb_3.setSelected(false);
                cbo_Operadores33.setEnabled(false);
                cbo_Operadores33.setSelectedIndex(-1);
                txtf_ValorCompC33.setEnabled(true);
                txtf_ValorCompC33.setText("");
            }else{
                txtf_ValorCompC3.setEnabled(true);
                txtf_ValorCompC3.setText("");
                rb_3.setEnabled(true);
                rb_3.setSelected(false);
                cbo_Operadores33.setEnabled(false);
                cbo_Operadores33.setSelectedIndex(-1);
                txtf_ValorCompC33.setEnabled(false);
                txtf_ValorCompC33.setText("");
            }
        }
    }//GEN-LAST:event_cbo_Operadores3ActionPerformed

    private void cbo_Operadores11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_Operadores11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbo_Operadores11ActionPerformed

    private void btn_RealizarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RealizarConsultaActionPerformed
        //Variables
        boolean condicion=false, condicion2=false, condicion3=false;
        
        //Condicionales
        //Si el campo del primer valor de la comparación está activo y contiene texto, y el campo del segundo valor NO está activo...
        if((txtf_ValorCompC1.isEnabled() && !txtf_ValorCompC1.getText().equals("")) && txtf_ValorCompC11.isEnabled()==false){
            condicion=false;
            //Si el campo del primer valor de la comparación está activo y contiene texto, y el campo del segundo valor está activo y contiene texto
        }else if((txtf_ValorCompC1.isEnabled() && !txtf_ValorCompC1.getText().equals("")) && (txtf_ValorCompC11.isEnabled() && !txtf_ValorCompC11.getText().equals(""))){
            condicion=true;
        }
        
        if((txtf_ValorCompC2.isEnabled() && !txtf_ValorCompC2.getText().equals("")) && txtf_ValorCompC22.isEnabled()==false){
            condicion2=false;
        }else if((txtf_ValorCompC2.isEnabled() && !txtf_ValorCompC2.getText().equals("")) && (txtf_ValorCompC22.isEnabled() && !txtf_ValorCompC22.getText().equals(""))){
            condicion2=true;
        }
        
        //txtf #3
        
        String columnas_aconsultar="";
        String nombre_tabla="";
        String columna_parametro="";
        String columna_parametro2="";
        
        //Formar cadena de columnas a consultar
        if(columnas_acons!=null && columnas_acons.isEmpty()==false){
            //
            columnas_aconsultar=columnas_acons.get(0);
        }
        if(columnas_acons2!=null && columnas_acons2.isEmpty()==false){
            //
            int nelementosv=columnas_acons2.size();
            for(int n=0;n<nelementosv-1;n++){
                String colsacon_temp;
                colsacon_temp=columnas_acons2.get(n)+", ";
                columnas_aconsultar=columnas_aconsultar+colsacon_temp;
            } 
            columnas_aconsultar=columnas_aconsultar+columnas_acons2.get(nelementosv-1);
        }
        
        //Obtener nombre de la tabla de la cual se va a consultar
        nombre_tabla=tabla_consultar;
         
        //Acciones a realizar según el número de columnas parámetro
        if(columnas_param!=null && columnas_param.isEmpty()==false){
            //
            switch(columnas_param.size()){
                case 1:
                    columna_parametro=columnas_param.get(0);
                    this.consultaUnaColumnaParametro(condicion, columnas_aconsultar, nombre_tabla, columna_parametro);
                    break;
                case 2:
                    columna_parametro=columnas_param.get(0);
                    columna_parametro2=columnas_param.get(1);
                    this.consultaDosColumnasParametro(condicion, condicion2, columnas_aconsultar, nombre_tabla, columna_parametro, columna_parametro2);
                    break;
                case 3:
                    /*
                    
                    */
                    break;
                default:
                    break;
            }
        }
    }//GEN-LAST:event_btn_RealizarConsultaActionPerformed

    private void txtf_ValorCompC22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtf_ValorCompC22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtf_ValorCompC22ActionPerformed

    //MÉTODOS
    //Obtener columnas de una tabla de la base de datos
    public void obtenerColumnasTabla(String tabla){
        //
        ResultSet resset;
        Statement stm;
        //Sentencia
        String sentenciaSQL="SELECT COLUMN_NAME, DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '"+tabla+"'";
        //try-catch
        try{
            stm=con.createStatement();
            resset=stm.executeQuery(sentenciaSQL);
            //
            while(resset.next()){
                cbo_ColumnasTabla.addItem(resset.getString(1)+" - "+resset.getString(2));
            }
        }catch(SQLException sqlex){
            JOptionPane.showMessageDialog(this, "Ha ocurrido una excepción: "+sqlex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    //Obtener columnas de una tabla de la base de datos #2
    public void obtenerColumnasTabla2(String tabla){
        //
        ResultSet resset;
        Statement stm;
        //Sentencia
        String sentenciaSQL="SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '"+tabla+"'";
        //try-catch
        try{
            stm=con.createStatement();
            resset=stm.executeQuery(sentenciaSQL);
            //
            while(resset.next()){
                cbo_ColumnasSelecc.addItem(resset.getString(1));
            }
        }catch(SQLException sqlex){
            JOptionPane.showMessageDialog(this, "Ha ocurrido una excepción: "+sqlex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    //Obtener columnas de una tabla de la base de datos #3
    public void obtenerColumnasTabla3(String tabla, DefaultTableModel modelotabla){
        //
        ResultSet resset;
        Statement stm;
        //Sentencia
        String sentenciaSQL="SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '"+tabla+"'";
        //try-catch
        try{
            stm=con.createStatement();
            resset=stm.executeQuery(sentenciaSQL);
            //
            while(resset.next()){
                //
                modelotabla.addColumn(resset.getString(1));
            }
        }catch(SQLException sqlex){
            JOptionPane.showMessageDialog(this, "Ha ocurrido una excepción: "+sqlex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    //Obtener tipo de dato de columna de tabla
    public String obtenerTipoColumna(String tabla, String columna){
        //
        ResultSet resset;
        Statement stm;
        String column_datype="";
        //Sentencia
        String sentenciaSQL="SELECT DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '"+tabla+"' AND COLUMN_NAME = '"+columna+"'";
        //try-catch
        try{
            stm=con.createStatement();
            resset=stm.executeQuery(sentenciaSQL);
            //
            while(resset.next()){
                column_datype=resset.getString(1);
            }
        }catch(SQLException sqlex){
            JOptionPane.showMessageDialog(this, "Ha ocurrido una excepción: "+sqlex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        //
        return column_datype;
    }
    
    //Método de consulta #1
    public void consultaUnaColumnaParametro(boolean condiciones, String columnas_aconsultar, String nombre_tabla, String columna_parametro){
        //Variables
        DefaultTableModel mdl_tbl1=new DefaultTableModel();
        
        String tipo_columna="";
        
        String operador1="";
        String valor_campo1="";
        String operador2="";
        String valor_campo2="";
        
        String sentenciaSQL="";
        ResultSet rset;
        Statement stmnt;
        
        //Obtener tipo de dato de columna
        tipo_columna=this.obtenerTipoColumna(nombre_tabla, columna_parametro);
        
        //Agregar columnas a DefaultTableModel
        if(columnas_acons!=null){
            System.out.println("'columnas_acons' no es nulo. Agregamos todas las columnas a modelo de tabla.");
            //
            this.obtenerColumnasTabla3(nombre_tabla, mdl_tbl1);
        }
        if(columnas_acons2!=null){
            System.out.println("'columnas_acons2' no es nulo. Agregamos columnas seleccionadas a modelo de tabla.");
            //
            int nelementosv=columnas_acons2.size();
            //
            switch(nelementosv){
                case 1:
                    mdl_tbl1.addColumn(columnas_acons2.get(0));
                    break; 
                case 2:
                    mdl_tbl1.addColumn(columnas_acons2.get(0));
                    mdl_tbl1.addColumn(columnas_acons2.get(1));
                    break; 
                case 3:
                    mdl_tbl1.addColumn(columnas_acons2.get(0));
                    mdl_tbl1.addColumn(columnas_acons2.get(1));
                    mdl_tbl1.addColumn(columnas_acons2.get(2));
                    break; 
                default:
                    //
                    break;
            }
        }
        
        //
        int no_columodel=mdl_tbl1.getColumnCount();
        
        /*Si bandera 'condiciones' es igual a false, significa que a la columna que servirá como parámetro de la consulta
        solo se le asignó un operador o condición...
        */
        if(condiciones==false){
            //Obtener Strings cbo y primer campo
            operador1=cbo_Operadores1.getSelectedItem().toString();
            valor_campo1=txtf_ValorCompC1.getText();
            //Condiciones y formación de sentencia
            if(tipo_columna.equals("int") || tipo_columna.equals("bigint") || tipo_columna.equals("decimal")){
                sentenciaSQL="SELECT "+columnas_aconsultar+" FROM "+nombre_tabla+" WHERE "+columna_parametro+" "+operador1+" "+valor_campo1;
            }else if(tipo_columna.equals("varchar") || tipo_columna.equals("time") || tipo_columna.equals("date")){
                sentenciaSQL="SELECT "+columnas_aconsultar+" FROM "+nombre_tabla+" WHERE "+columna_parametro+" "+operador1+" '"+valor_campo1+"'";
            }
            
            //try-catch
            try{
                stmnt=con.createStatement();
                rset=stmnt.executeQuery(sentenciaSQL);
                //Obtener y almacenar resultados de consulta de fila en fila e irlas agregando al modelo
                while(rset.next()){
                    Object[] fila_insertar=new Object[no_columodel];
                    //
                    for(int x=0;x<no_columodel;x++){
                        fila_insertar[x]=rset.getObject(x+1);
                    }
                    //
                    mdl_tbl1.addRow(fila_insertar);
                }
            }catch(SQLException sqlex){
                 JOptionPane.showMessageDialog(this, "Ha ocurrido una excepción: "+sqlex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
            //Setear modelo en tabla de interfaz
            Tabla_Resultados.setModel(mdl_tbl1);
            
        /*Si bandera 'condiciones' es igual a true, significa que a la columna que servirá como parámetro de la consulta
        se le asignó un más de un operador o condición...
        */
        }else if(condiciones==true){
            //Obtener Strings cbo y primer campo
            operador1=cbo_Operadores1.getSelectedItem().toString();
            valor_campo1=txtf_ValorCompC1.getText();
            operador2=cbo_Operadores11.getSelectedItem().toString();
            valor_campo2=txtf_ValorCompC11.getText();
            //Condiciones y formación de sentencia
            if(tipo_columna.equals("int") || tipo_columna.equals("bigint") || tipo_columna.equals("decimal")){
                sentenciaSQL="SELECT "+columnas_aconsultar+" FROM "+nombre_tabla+" WHERE "+columna_parametro+" "+operador1+" "+valor_campo1+" AND "+columna_parametro+" "+operador2+" "+valor_campo2;
            }else if(tipo_columna.equals("varchar") || tipo_columna.equals("time") || tipo_columna.equals("date")){
                sentenciaSQL="SELECT "+columnas_aconsultar+" FROM "+nombre_tabla+" WHERE "+columna_parametro+" "+operador1+" '"+valor_campo1+"' AND "+columna_parametro+" "+operador2+" '"+valor_campo2+"'";
            }
            //try-catch
            try{
                stmnt=con.createStatement();
                rset=stmnt.executeQuery(sentenciaSQL);
                //
                while(rset.next()){
                    //
                    Object[] fila_insertar2=new Object[no_columodel];
                    //
                    for(int x=0;x<no_columodel;x++){
                        fila_insertar2[x]=rset.getObject(x+1); 
                    }
                    mdl_tbl1.addRow(fila_insertar2);
                }
                
            }catch(SQLException sqlex){
                 JOptionPane.showMessageDialog(this, "Ha ocurrido una excepción: "+sqlex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
            //Setear modelo en tabla de interfaz
            Tabla_Resultados.setModel(mdl_tbl1);
        }
    }
    
    //Método de consulta #2
    public void consultaDosColumnasParametro(boolean cond1, boolean cond2, String columnas_aconsultar, String nombre_tabla, String columna_parametro, String columna_parametro2){
        //Variables
        DefaultTableModel mdl_tbl2=new DefaultTableModel();
        
        String tipo_columna="", tipo_columna2="";
        
        String operador1="";
        String valor_campo1="";
        String operador2="";
        String valor_campo2="";
        
        String operador12="";
        String valor_campo12="";
        String operador22="";
        String valor_campo22="";
        
        String sentenciaSQL="";
        String s1="", s2="";
        ResultSet rset;
        Statement stmnt;
        
        //Obtener tipo de dato de columnas
        tipo_columna=this.obtenerTipoColumna(nombre_tabla, columna_parametro);
        tipo_columna2=this.obtenerTipoColumna(nombre_tabla, columna_parametro2);
        
        //Agregar columnas a DefaultTableModel
        if(columnas_acons!=null){
            this.obtenerColumnasTabla3(nombre_tabla,mdl_tbl2);
        }
        if(columnas_acons2!=null){
            //
            int nelementosv=columnas_acons2.size();
            //
            switch(nelementosv){
                case 1:
                    mdl_tbl2.addColumn(columnas_acons2.get(0));
                    break; 
                case 2:
                    mdl_tbl2.addColumn(columnas_acons2.get(0));
                    mdl_tbl2.addColumn(columnas_acons2.get(1));
                    break; 
                case 3:
                    mdl_tbl2.addColumn(columnas_acons2.get(0));
                    mdl_tbl2.addColumn(columnas_acons2.get(1));
                    mdl_tbl2.addColumn(columnas_acons2.get(2));
                    break; 
                default:
                    //
                    break;
            }
        }
        
        //
        int no_columsmodelo=mdl_tbl2.getColumnCount();
     
        //Obtener Strings columna #1 y #2, primer cbo y primer campo
        operador1=cbo_Operadores1.getSelectedItem().toString();
        valor_campo1=txtf_ValorCompC1.getText();
        operador12=cbo_Operadores2.getSelectedItem().toString();
        valor_campo12=txtf_ValorCompC2.getText();
        //----------------------------------------------------------
        if(cond1==false){
            //Condiciones y formación de sentencia
            if(tipo_columna.equals("int") || tipo_columna.equals("bigint") || tipo_columna.equals("decimal")){
                s1="("+columna_parametro+" "+operador1+" "+valor_campo1+")";
            }else if(tipo_columna.equals("varchar") || tipo_columna.equals("time") || tipo_columna.equals("date")){
                s1="("+columna_parametro+" "+operador1+" '"+valor_campo1+"')";
            }
        }else if(cond1==true){
            //Obtener Strings columna #1, segundo cbo y segundo campo
            operador2=cbo_Operadores11.getSelectedItem().toString();
            valor_campo2=txtf_ValorCompC11.getText();
            //
            if(tipo_columna.equals("int") || tipo_columna.equals("bigint") || tipo_columna.equals("decimal")){
                s1="("+columna_parametro+" "+operador1+" "+valor_campo1+" AND "+columna_parametro+" "+operador2+" "+valor_campo2+")";
            }else if(tipo_columna.equals("varchar") || tipo_columna.equals("time") || tipo_columna.equals("date")){
                s1="("+columna_parametro+" "+operador1+" '"+valor_campo1+"' AND "+columna_parametro+" "+operador2+" '"+valor_campo2+"')";
            }
        }
        //
        if(cond2==false){
            //Condiciones y formación de sentencia
            if(tipo_columna2.equals("int") || tipo_columna2.equals("bigint") || tipo_columna2.equals("decimal")){
                s2="("+columna_parametro2+" "+operador12+" "+valor_campo12+")"; 
            }else if(tipo_columna2.equals("varchar") || tipo_columna2.equals("time") || tipo_columna2.equals("date")){
                s2="("+columna_parametro2+" "+operador12+" '"+valor_campo12+"')";
            }
        }else if(cond2==true){
            //Obtener Strings columna #2, segundo cbo y segundo campo
            operador22=cbo_Operadores22.getSelectedItem().toString();
            valor_campo22=txtf_ValorCompC22.getText();
            //
            if(tipo_columna2.equals("int") || tipo_columna2.equals("bigint") || tipo_columna2.equals("decimal")){
                s2="("+columna_parametro2+" "+operador12+" "+valor_campo12+" AND "+columna_parametro2+" "+operador22+" "+valor_campo22+")";
            }else if(tipo_columna2.equals("varchar") || tipo_columna2.equals("time") || tipo_columna2.equals("date")){
                s2="("+columna_parametro2+" "+operador12+" '"+valor_campo12+"' AND "+columna_parametro2+" "+operador22+" '"+valor_campo22+"')";
            }
        }
        //Sentencia SQL
        sentenciaSQL="SELECT "+columnas_aconsultar+" FROM "+nombre_tabla+" WHERE "+s1+" AND "+s2;
        //try-catch
        try{
                stmnt=con.createStatement();
                rset=stmnt.executeQuery(sentenciaSQL);
                //
                while(rset.next()){
                    Object[] fila_insertar=new Object[no_columsmodelo];
                    //
                    for(int x=0;x<no_columsmodelo;x++){
                        fila_insertar[x]=rset.getObject(x+1); 
                    }
                    mdl_tbl2.addRow(fila_insertar);
                }
            }catch(SQLException sqlex){
                 JOptionPane.showMessageDialog(this, "Ha ocurrido una excepción: "+sqlex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        //Setear modelo en tabla de interfaz
        Tabla_Resultados.setModel(mdl_tbl2);
    }
            
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaSELECT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaSELECT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaSELECT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaSELECT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaSELECT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla_Resultados;
    private javax.swing.JButton btn_ConfirmarSelColum;
    private javax.swing.JButton btn_ConfirmarSelColum2;
    private javax.swing.JButton btn_RealizarConsulta;
    private javax.swing.JButton btn_RestablecerSelColum2;
    private javax.swing.JComboBox<String> cbo_ColumnasSelecc;
    private javax.swing.JComboBox<String> cbo_ColumnasTabla;
    private javax.swing.JComboBox<String> cbo_Operadores1;
    private javax.swing.JComboBox<String> cbo_Operadores11;
    private javax.swing.JComboBox<String> cbo_Operadores2;
    private javax.swing.JComboBox<String> cbo_Operadores22;
    private javax.swing.JComboBox<String> cbo_Operadores3;
    private javax.swing.JComboBox<String> cbo_Operadores33;
    private javax.swing.JComboBox<String> cbo_Tablas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_AjusteParam;
    private javax.swing.JLabel lbl_Resultados;
    private javax.swing.JLabel lbl_SeleccColumn;
    private javax.swing.JLabel lbl_SeleccColumnParam;
    private javax.swing.JLabel lbl_SeleccColumnParam1;
    private javax.swing.JLabel lbl_SeleccColumnParam2;
    private javax.swing.JLabel lbl_SeleccColumnParam3;
    private javax.swing.JLabel lbl_SeleccTabla;
    private javax.swing.JLabel lbl_SeleccionColumn;
    private javax.swing.JLabel lbl_SeleccionColumn2;
    private javax.swing.JLabel lbl_fondo;
    private javax.swing.JLabel lbl_reset;
    private javax.swing.JPanel pnl_Dos;
    private javax.swing.JPanel pnl_Tres;
    private javax.swing.JPanel pnl_Uno;
    private javax.swing.JRadioButton rb_1;
    private javax.swing.JRadioButton rb_2;
    private javax.swing.JRadioButton rb_3;
    private javax.swing.JTextField txtf_ValorCompC1;
    private javax.swing.JTextField txtf_ValorCompC11;
    private javax.swing.JTextField txtf_ValorCompC2;
    private javax.swing.JTextField txtf_ValorCompC22;
    private javax.swing.JTextField txtf_ValorCompC3;
    private javax.swing.JTextField txtf_ValorCompC33;
    // End of variables declaration//GEN-END:variables
}
